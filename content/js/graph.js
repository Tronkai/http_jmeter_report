/*
   Licensed to the Apache Software Foundation (ASF) under one or more
   contributor license agreements.  See the NOTICE file distributed with
   this work for additional information regarding copyright ownership.
   The ASF licenses this file to You under the Apache License, Version 2.0
   (the "License"); you may not use this file except in compliance with
   the License.  You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
*/
$(document).ready(function() {

    $(".click-title").mouseenter( function(    e){
        e.preventDefault();
        this.style.cursor="pointer";
    });
    $(".click-title").mousedown( function(event){
        event.preventDefault();
    });

    // Ugly code while this script is shared among several pages
    try{
        refreshHitsPerSecond(true);
    } catch(e){}
    try{
        refreshResponseTimeOverTime(true);
    } catch(e){}
    try{
        refreshResponseTimePercentiles();
    } catch(e){}
});


var responseTimePercentilesInfos = {
        data: {"result": {"minY": 0.0, "minX": 0.0, "maxY": 1577.0, "series": [{"data": [[0.0, 0.0], [0.1, 0.0], [0.2, 0.0], [0.3, 0.0], [0.4, 0.0], [0.5, 0.0], [0.6, 0.0], [0.7, 0.0], [0.8, 0.0], [0.9, 0.0], [1.0, 0.0], [1.1, 0.0], [1.2, 0.0], [1.3, 0.0], [1.4, 0.0], [1.5, 0.0], [1.6, 0.0], [1.7, 0.0], [1.8, 0.0], [1.9, 0.0], [2.0, 0.0], [2.1, 0.0], [2.2, 0.0], [2.3, 0.0], [2.4, 0.0], [2.5, 0.0], [2.6, 0.0], [2.7, 0.0], [2.8, 0.0], [2.9, 0.0], [3.0, 0.0], [3.1, 0.0], [3.2, 0.0], [3.3, 0.0], [3.4, 0.0], [3.5, 0.0], [3.6, 0.0], [3.7, 0.0], [3.8, 0.0], [3.9, 0.0], [4.0, 0.0], [4.1, 0.0], [4.2, 0.0], [4.3, 0.0], [4.4, 0.0], [4.5, 0.0], [4.6, 0.0], [4.7, 0.0], [4.8, 0.0], [4.9, 0.0], [5.0, 0.0], [5.1, 0.0], [5.2, 0.0], [5.3, 0.0], [5.4, 0.0], [5.5, 0.0], [5.6, 0.0], [5.7, 0.0], [5.8, 0.0], [5.9, 0.0], [6.0, 0.0], [6.1, 0.0], [6.2, 0.0], [6.3, 0.0], [6.4, 0.0], [6.5, 0.0], [6.6, 0.0], [6.7, 0.0], [6.8, 0.0], [6.9, 0.0], [7.0, 0.0], [7.1, 0.0], [7.2, 0.0], [7.3, 0.0], [7.4, 0.0], [7.5, 0.0], [7.6, 0.0], [7.7, 0.0], [7.8, 0.0], [7.9, 0.0], [8.0, 0.0], [8.1, 0.0], [8.2, 0.0], [8.3, 0.0], [8.4, 0.0], [8.5, 0.0], [8.6, 0.0], [8.7, 0.0], [8.8, 0.0], [8.9, 0.0], [9.0, 0.0], [9.1, 0.0], [9.2, 0.0], [9.3, 0.0], [9.4, 0.0], [9.5, 0.0], [9.6, 0.0], [9.7, 0.0], [9.8, 0.0], [9.9, 0.0], [10.0, 0.0], [10.1, 0.0], [10.2, 0.0], [10.3, 0.0], [10.4, 0.0], [10.5, 0.0], [10.6, 0.0], [10.7, 0.0], [10.8, 0.0], [10.9, 0.0], [11.0, 0.0], [11.1, 0.0], [11.2, 0.0], [11.3, 0.0], [11.4, 0.0], [11.5, 0.0], [11.6, 0.0], [11.7, 0.0], [11.8, 0.0], [11.9, 0.0], [12.0, 0.0], [12.1, 0.0], [12.2, 0.0], [12.3, 0.0], [12.4, 0.0], [12.5, 0.0], [12.6, 0.0], [12.7, 0.0], [12.8, 0.0], [12.9, 0.0], [13.0, 0.0], [13.1, 0.0], [13.2, 0.0], [13.3, 0.0], [13.4, 0.0], [13.5, 0.0], [13.6, 0.0], [13.7, 0.0], [13.8, 0.0], [13.9, 0.0], [14.0, 0.0], [14.1, 0.0], [14.2, 0.0], [14.3, 0.0], [14.4, 0.0], [14.5, 0.0], [14.6, 0.0], [14.7, 0.0], [14.8, 0.0], [14.9, 0.0], [15.0, 0.0], [15.1, 0.0], [15.2, 0.0], [15.3, 0.0], [15.4, 0.0], [15.5, 0.0], [15.6, 0.0], [15.7, 0.0], [15.8, 0.0], [15.9, 0.0], [16.0, 0.0], [16.1, 0.0], [16.2, 0.0], [16.3, 0.0], [16.4, 0.0], [16.5, 0.0], [16.6, 0.0], [16.7, 0.0], [16.8, 0.0], [16.9, 0.0], [17.0, 0.0], [17.1, 0.0], [17.2, 0.0], [17.3, 0.0], [17.4, 0.0], [17.5, 0.0], [17.6, 0.0], [17.7, 0.0], [17.8, 0.0], [17.9, 0.0], [18.0, 0.0], [18.1, 0.0], [18.2, 0.0], [18.3, 0.0], [18.4, 0.0], [18.5, 0.0], [18.6, 0.0], [18.7, 0.0], [18.8, 0.0], [18.9, 0.0], [19.0, 0.0], [19.1, 0.0], [19.2, 0.0], [19.3, 0.0], [19.4, 0.0], [19.5, 0.0], [19.6, 0.0], [19.7, 0.0], [19.8, 0.0], [19.9, 0.0], [20.0, 0.0], [20.1, 0.0], [20.2, 0.0], [20.3, 0.0], [20.4, 0.0], [20.5, 0.0], [20.6, 0.0], [20.7, 0.0], [20.8, 0.0], [20.9, 0.0], [21.0, 0.0], [21.1, 0.0], [21.2, 0.0], [21.3, 0.0], [21.4, 0.0], [21.5, 0.0], [21.6, 0.0], [21.7, 0.0], [21.8, 0.0], [21.9, 0.0], [22.0, 0.0], [22.1, 0.0], [22.2, 0.0], [22.3, 0.0], [22.4, 0.0], [22.5, 0.0], [22.6, 0.0], [22.7, 0.0], [22.8, 0.0], [22.9, 0.0], [23.0, 0.0], [23.1, 0.0], [23.2, 0.0], [23.3, 0.0], [23.4, 0.0], [23.5, 0.0], [23.6, 0.0], [23.7, 0.0], [23.8, 0.0], [23.9, 0.0], [24.0, 0.0], [24.1, 0.0], [24.2, 0.0], [24.3, 0.0], [24.4, 0.0], [24.5, 0.0], [24.6, 0.0], [24.7, 0.0], [24.8, 0.0], [24.9, 0.0], [25.0, 0.0], [25.1, 0.0], [25.2, 0.0], [25.3, 0.0], [25.4, 0.0], [25.5, 0.0], [25.6, 0.0], [25.7, 0.0], [25.8, 0.0], [25.9, 0.0], [26.0, 0.0], [26.1, 0.0], [26.2, 0.0], [26.3, 0.0], [26.4, 0.0], [26.5, 0.0], [26.6, 0.0], [26.7, 0.0], [26.8, 0.0], [26.9, 0.0], [27.0, 0.0], [27.1, 0.0], [27.2, 0.0], [27.3, 0.0], [27.4, 0.0], [27.5, 0.0], [27.6, 0.0], [27.7, 0.0], [27.8, 0.0], [27.9, 0.0], [28.0, 0.0], [28.1, 0.0], [28.2, 0.0], [28.3, 0.0], [28.4, 0.0], [28.5, 0.0], [28.6, 0.0], [28.7, 0.0], [28.8, 0.0], [28.9, 0.0], [29.0, 0.0], [29.1, 0.0], [29.2, 0.0], [29.3, 0.0], [29.4, 0.0], [29.5, 0.0], [29.6, 0.0], [29.7, 0.0], [29.8, 0.0], [29.9, 0.0], [30.0, 0.0], [30.1, 0.0], [30.2, 0.0], [30.3, 0.0], [30.4, 0.0], [30.5, 0.0], [30.6, 0.0], [30.7, 0.0], [30.8, 0.0], [30.9, 0.0], [31.0, 0.0], [31.1, 0.0], [31.2, 0.0], [31.3, 0.0], [31.4, 0.0], [31.5, 0.0], [31.6, 0.0], [31.7, 0.0], [31.8, 0.0], [31.9, 0.0], [32.0, 0.0], [32.1, 0.0], [32.2, 0.0], [32.3, 0.0], [32.4, 0.0], [32.5, 0.0], [32.6, 0.0], [32.7, 0.0], [32.8, 0.0], [32.9, 0.0], [33.0, 0.0], [33.1, 0.0], [33.2, 0.0], [33.3, 0.0], [33.4, 0.0], [33.5, 0.0], [33.6, 0.0], [33.7, 0.0], [33.8, 0.0], [33.9, 0.0], [34.0, 0.0], [34.1, 0.0], [34.2, 0.0], [34.3, 0.0], [34.4, 0.0], [34.5, 1.0], [34.6, 1.0], [34.7, 1.0], [34.8, 1.0], [34.9, 1.0], [35.0, 1.0], [35.1, 1.0], [35.2, 1.0], [35.3, 1.0], [35.4, 1.0], [35.5, 1.0], [35.6, 1.0], [35.7, 1.0], [35.8, 1.0], [35.9, 1.0], [36.0, 1.0], [36.1, 1.0], [36.2, 1.0], [36.3, 1.0], [36.4, 1.0], [36.5, 1.0], [36.6, 1.0], [36.7, 1.0], [36.8, 1.0], [36.9, 1.0], [37.0, 1.0], [37.1, 1.0], [37.2, 1.0], [37.3, 1.0], [37.4, 1.0], [37.5, 1.0], [37.6, 1.0], [37.7, 1.0], [37.8, 1.0], [37.9, 1.0], [38.0, 1.0], [38.1, 1.0], [38.2, 1.0], [38.3, 1.0], [38.4, 1.0], [38.5, 1.0], [38.6, 1.0], [38.7, 1.0], [38.8, 1.0], [38.9, 1.0], [39.0, 1.0], [39.1, 1.0], [39.2, 1.0], [39.3, 1.0], [39.4, 1.0], [39.5, 1.0], [39.6, 1.0], [39.7, 1.0], [39.8, 1.0], [39.9, 1.0], [40.0, 1.0], [40.1, 1.0], [40.2, 1.0], [40.3, 1.0], [40.4, 1.0], [40.5, 1.0], [40.6, 1.0], [40.7, 1.0], [40.8, 1.0], [40.9, 1.0], [41.0, 1.0], [41.1, 1.0], [41.2, 1.0], [41.3, 1.0], [41.4, 1.0], [41.5, 1.0], [41.6, 1.0], [41.7, 1.0], [41.8, 1.0], [41.9, 1.0], [42.0, 1.0], [42.1, 1.0], [42.2, 1.0], [42.3, 1.0], [42.4, 1.0], [42.5, 1.0], [42.6, 1.0], [42.7, 1.0], [42.8, 1.0], [42.9, 1.0], [43.0, 1.0], [43.1, 1.0], [43.2, 1.0], [43.3, 1.0], [43.4, 1.0], [43.5, 1.0], [43.6, 1.0], [43.7, 1.0], [43.8, 1.0], [43.9, 1.0], [44.0, 1.0], [44.1, 1.0], [44.2, 1.0], [44.3, 1.0], [44.4, 1.0], [44.5, 1.0], [44.6, 1.0], [44.7, 1.0], [44.8, 1.0], [44.9, 1.0], [45.0, 1.0], [45.1, 1.0], [45.2, 1.0], [45.3, 1.0], [45.4, 1.0], [45.5, 1.0], [45.6, 1.0], [45.7, 1.0], [45.8, 1.0], [45.9, 1.0], [46.0, 1.0], [46.1, 1.0], [46.2, 1.0], [46.3, 1.0], [46.4, 1.0], [46.5, 1.0], [46.6, 1.0], [46.7, 1.0], [46.8, 1.0], [46.9, 1.0], [47.0, 1.0], [47.1, 1.0], [47.2, 1.0], [47.3, 1.0], [47.4, 1.0], [47.5, 1.0], [47.6, 1.0], [47.7, 1.0], [47.8, 1.0], [47.9, 1.0], [48.0, 1.0], [48.1, 1.0], [48.2, 1.0], [48.3, 1.0], [48.4, 1.0], [48.5, 1.0], [48.6, 1.0], [48.7, 1.0], [48.8, 1.0], [48.9, 1.0], [49.0, 1.0], [49.1, 1.0], [49.2, 1.0], [49.3, 1.0], [49.4, 1.0], [49.5, 1.0], [49.6, 1.0], [49.7, 1.0], [49.8, 1.0], [49.9, 1.0], [50.0, 1.0], [50.1, 1.0], [50.2, 1.0], [50.3, 1.0], [50.4, 1.0], [50.5, 1.0], [50.6, 1.0], [50.7, 1.0], [50.8, 1.0], [50.9, 1.0], [51.0, 1.0], [51.1, 1.0], [51.2, 1.0], [51.3, 1.0], [51.4, 1.0], [51.5, 1.0], [51.6, 1.0], [51.7, 1.0], [51.8, 1.0], [51.9, 1.0], [52.0, 1.0], [52.1, 1.0], [52.2, 1.0], [52.3, 1.0], [52.4, 1.0], [52.5, 1.0], [52.6, 1.0], [52.7, 1.0], [52.8, 1.0], [52.9, 1.0], [53.0, 1.0], [53.1, 1.0], [53.2, 1.0], [53.3, 1.0], [53.4, 1.0], [53.5, 1.0], [53.6, 1.0], [53.7, 1.0], [53.8, 1.0], [53.9, 1.0], [54.0, 1.0], [54.1, 1.0], [54.2, 1.0], [54.3, 1.0], [54.4, 1.0], [54.5, 1.0], [54.6, 1.0], [54.7, 1.0], [54.8, 1.0], [54.9, 1.0], [55.0, 1.0], [55.1, 1.0], [55.2, 1.0], [55.3, 1.0], [55.4, 1.0], [55.5, 1.0], [55.6, 1.0], [55.7, 1.0], [55.8, 1.0], [55.9, 1.0], [56.0, 1.0], [56.1, 1.0], [56.2, 1.0], [56.3, 1.0], [56.4, 1.0], [56.5, 1.0], [56.6, 1.0], [56.7, 1.0], [56.8, 1.0], [56.9, 1.0], [57.0, 1.0], [57.1, 1.0], [57.2, 1.0], [57.3, 1.0], [57.4, 1.0], [57.5, 1.0], [57.6, 1.0], [57.7, 1.0], [57.8, 1.0], [57.9, 1.0], [58.0, 1.0], [58.1, 1.0], [58.2, 1.0], [58.3, 1.0], [58.4, 1.0], [58.5, 1.0], [58.6, 1.0], [58.7, 1.0], [58.8, 1.0], [58.9, 1.0], [59.0, 1.0], [59.1, 1.0], [59.2, 1.0], [59.3, 1.0], [59.4, 1.0], [59.5, 1.0], [59.6, 1.0], [59.7, 1.0], [59.8, 1.0], [59.9, 1.0], [60.0, 1.0], [60.1, 1.0], [60.2, 1.0], [60.3, 1.0], [60.4, 1.0], [60.5, 1.0], [60.6, 1.0], [60.7, 1.0], [60.8, 1.0], [60.9, 1.0], [61.0, 1.0], [61.1, 1.0], [61.2, 1.0], [61.3, 1.0], [61.4, 1.0], [61.5, 1.0], [61.6, 1.0], [61.7, 1.0], [61.8, 1.0], [61.9, 1.0], [62.0, 1.0], [62.1, 1.0], [62.2, 1.0], [62.3, 1.0], [62.4, 1.0], [62.5, 1.0], [62.6, 1.0], [62.7, 1.0], [62.8, 1.0], [62.9, 1.0], [63.0, 1.0], [63.1, 1.0], [63.2, 1.0], [63.3, 1.0], [63.4, 1.0], [63.5, 1.0], [63.6, 1.0], [63.7, 1.0], [63.8, 1.0], [63.9, 1.0], [64.0, 1.0], [64.1, 1.0], [64.2, 1.0], [64.3, 1.0], [64.4, 1.0], [64.5, 1.0], [64.6, 1.0], [64.7, 1.0], [64.8, 1.0], [64.9, 1.0], [65.0, 1.0], [65.1, 1.0], [65.2, 1.0], [65.3, 1.0], [65.4, 1.0], [65.5, 1.0], [65.6, 1.0], [65.7, 1.0], [65.8, 1.0], [65.9, 1.0], [66.0, 1.0], [66.1, 1.0], [66.2, 1.0], [66.3, 1.0], [66.4, 1.0], [66.5, 1.0], [66.6, 1.0], [66.7, 1.0], [66.8, 1.0], [66.9, 1.0], [67.0, 1.0], [67.1, 1.0], [67.2, 1.0], [67.3, 1.0], [67.4, 1.0], [67.5, 1.0], [67.6, 1.0], [67.7, 1.0], [67.8, 1.0], [67.9, 1.0], [68.0, 1.0], [68.1, 1.0], [68.2, 1.0], [68.3, 1.0], [68.4, 1.0], [68.5, 1.0], [68.6, 1.0], [68.7, 1.0], [68.8, 1.0], [68.9, 1.0], [69.0, 1.0], [69.1, 1.0], [69.2, 1.0], [69.3, 1.0], [69.4, 1.0], [69.5, 1.0], [69.6, 1.0], [69.7, 1.0], [69.8, 1.0], [69.9, 1.0], [70.0, 1.0], [70.1, 1.0], [70.2, 1.0], [70.3, 1.0], [70.4, 1.0], [70.5, 1.0], [70.6, 1.0], [70.7, 1.0], [70.8, 1.0], [70.9, 1.0], [71.0, 1.0], [71.1, 1.0], [71.2, 1.0], [71.3, 1.0], [71.4, 1.0], [71.5, 1.0], [71.6, 1.0], [71.7, 1.0], [71.8, 1.0], [71.9, 1.0], [72.0, 1.0], [72.1, 1.0], [72.2, 1.0], [72.3, 1.0], [72.4, 1.0], [72.5, 1.0], [72.6, 1.0], [72.7, 1.0], [72.8, 1.0], [72.9, 1.0], [73.0, 1.0], [73.1, 1.0], [73.2, 1.0], [73.3, 1.0], [73.4, 1.0], [73.5, 1.0], [73.6, 1.0], [73.7, 1.0], [73.8, 1.0], [73.9, 1.0], [74.0, 1.0], [74.1, 1.0], [74.2, 1.0], [74.3, 1.0], [74.4, 1.0], [74.5, 1.0], [74.6, 1.0], [74.7, 1.0], [74.8, 1.0], [74.9, 1.0], [75.0, 1.0], [75.1, 1.0], [75.2, 1.0], [75.3, 1.0], [75.4, 1.0], [75.5, 1.0], [75.6, 1.0], [75.7, 1.0], [75.8, 1.0], [75.9, 1.0], [76.0, 1.0], [76.1, 1.0], [76.2, 1.0], [76.3, 1.0], [76.4, 1.0], [76.5, 1.0], [76.6, 1.0], [76.7, 1.0], [76.8, 1.0], [76.9, 1.0], [77.0, 1.0], [77.1, 1.0], [77.2, 1.0], [77.3, 1.0], [77.4, 1.0], [77.5, 1.0], [77.6, 1.0], [77.7, 1.0], [77.8, 1.0], [77.9, 1.0], [78.0, 1.0], [78.1, 1.0], [78.2, 1.0], [78.3, 1.0], [78.4, 1.0], [78.5, 1.0], [78.6, 1.0], [78.7, 1.0], [78.8, 1.0], [78.9, 1.0], [79.0, 1.0], [79.1, 1.0], [79.2, 1.0], [79.3, 1.0], [79.4, 1.0], [79.5, 1.0], [79.6, 1.0], [79.7, 1.0], [79.8, 1.0], [79.9, 1.0], [80.0, 1.0], [80.1, 1.0], [80.2, 1.0], [80.3, 1.0], [80.4, 1.0], [80.5, 1.0], [80.6, 1.0], [80.7, 1.0], [80.8, 1.0], [80.9, 1.0], [81.0, 1.0], [81.1, 1.0], [81.2, 1.0], [81.3, 1.0], [81.4, 1.0], [81.5, 1.0], [81.6, 1.0], [81.7, 1.0], [81.8, 1.0], [81.9, 1.0], [82.0, 1.0], [82.1, 1.0], [82.2, 1.0], [82.3, 1.0], [82.4, 1.0], [82.5, 1.0], [82.6, 1.0], [82.7, 1.0], [82.8, 1.0], [82.9, 1.0], [83.0, 1.0], [83.1, 1.0], [83.2, 1.0], [83.3, 1.0], [83.4, 1.0], [83.5, 1.0], [83.6, 1.0], [83.7, 1.0], [83.8, 1.0], [83.9, 1.0], [84.0, 1.0], [84.1, 1.0], [84.2, 1.0], [84.3, 1.0], [84.4, 1.0], [84.5, 1.0], [84.6, 1.0], [84.7, 1.0], [84.8, 1.0], [84.9, 1.0], [85.0, 1.0], [85.1, 1.0], [85.2, 1.0], [85.3, 1.0], [85.4, 1.0], [85.5, 1.0], [85.6, 1.0], [85.7, 1.0], [85.8, 1.0], [85.9, 1.0], [86.0, 1.0], [86.1, 1.0], [86.2, 1.0], [86.3, 1.0], [86.4, 1.0], [86.5, 1.0], [86.6, 1.0], [86.7, 1.0], [86.8, 1.0], [86.9, 1.0], [87.0, 1.0], [87.1, 1.0], [87.2, 1.0], [87.3, 1.0], [87.4, 1.0], [87.5, 1.0], [87.6, 1.0], [87.7, 1.0], [87.8, 1.0], [87.9, 1.0], [88.0, 1.0], [88.1, 1.0], [88.2, 1.0], [88.3, 1.0], [88.4, 1.0], [88.5, 1.0], [88.6, 1.0], [88.7, 1.0], [88.8, 1.0], [88.9, 1.0], [89.0, 1.0], [89.1, 1.0], [89.2, 1.0], [89.3, 1.0], [89.4, 1.0], [89.5, 1.0], [89.6, 1.0], [89.7, 1.0], [89.8, 1.0], [89.9, 1.0], [90.0, 1.0], [90.1, 1.0], [90.2, 1.0], [90.3, 1.0], [90.4, 1.0], [90.5, 1.0], [90.6, 1.0], [90.7, 1.0], [90.8, 1.0], [90.9, 1.0], [91.0, 1.0], [91.1, 1.0], [91.2, 1.0], [91.3, 1.0], [91.4, 1.0], [91.5, 1.0], [91.6, 1.0], [91.7, 1.0], [91.8, 1.0], [91.9, 1.0], [92.0, 1.0], [92.1, 1.0], [92.2, 1.0], [92.3, 1.0], [92.4, 1.0], [92.5, 1.0], [92.6, 1.0], [92.7, 1.0], [92.8, 1.0], [92.9, 1.0], [93.0, 1.0], [93.1, 1.0], [93.2, 1.0], [93.3, 1.0], [93.4, 1.0], [93.5, 1.0], [93.6, 1.0], [93.7, 1.0], [93.8, 1.0], [93.9, 1.0], [94.0, 1.0], [94.1, 1.0], [94.2, 1.0], [94.3, 1.0], [94.4, 1.0], [94.5, 1.0], [94.6, 1.0], [94.7, 1.0], [94.8, 1.0], [94.9, 1.0], [95.0, 1.0], [95.1, 1.0], [95.2, 1.0], [95.3, 1.0], [95.4, 1.0], [95.5, 1.0], [95.6, 1.0], [95.7, 1.0], [95.8, 1.0], [95.9, 1.0], [96.0, 1.0], [96.1, 1.0], [96.2, 1.0], [96.3, 1.0], [96.4, 1.0], [96.5, 1.0], [96.6, 1.0], [96.7, 1.0], [96.8, 1.0], [96.9, 1.0], [97.0, 1.0], [97.1, 1.0], [97.2, 1.0], [97.3, 1.0], [97.4, 1.0], [97.5, 1.0], [97.6, 1.0], [97.7, 1.0], [97.8, 1.0], [97.9, 1.0], [98.0, 1.0], [98.1, 1.0], [98.2, 1.0], [98.3, 1.0], [98.4, 1.0], [98.5, 1.0], [98.6, 1.0], [98.7, 1.0], [98.8, 1.0], [98.9, 1.0], [99.0, 1.0], [99.1, 1.0], [99.2, 1.0], [99.3, 1.0], [99.4, 1.0], [99.5, 1.0], [99.6, 1.0], [99.7, 1.0], [99.8, 1.0], [99.9, 2.0], [100.0, 10.0]], "isOverall": false, "label": "api\/block\u65B0\u63A5\u53E3\u4E0D\u5E26\u53C2\u6570", "isController": false}, {"data": [[0.0, 48.0], [0.1, 48.0], [0.2, 48.0], [0.3, 49.0], [0.4, 49.0], [0.5, 49.0], [0.6, 49.0], [0.7, 49.0], [0.8, 49.0], [0.9, 49.0], [1.0, 49.0], [1.1, 49.0], [1.2, 49.0], [1.3, 49.0], [1.4, 49.0], [1.5, 49.0], [1.6, 49.0], [1.7, 49.0], [1.8, 49.0], [1.9, 49.0], [2.0, 49.0], [2.1, 49.0], [2.2, 49.0], [2.3, 49.0], [2.4, 49.0], [2.5, 49.0], [2.6, 49.0], [2.7, 49.0], [2.8, 50.0], [2.9, 50.0], [3.0, 50.0], [3.1, 50.0], [3.2, 50.0], [3.3, 50.0], [3.4, 50.0], [3.5, 50.0], [3.6, 50.0], [3.7, 50.0], [3.8, 50.0], [3.9, 50.0], [4.0, 50.0], [4.1, 50.0], [4.2, 50.0], [4.3, 50.0], [4.4, 50.0], [4.5, 50.0], [4.6, 50.0], [4.7, 50.0], [4.8, 50.0], [4.9, 50.0], [5.0, 50.0], [5.1, 50.0], [5.2, 50.0], [5.3, 50.0], [5.4, 50.0], [5.5, 50.0], [5.6, 50.0], [5.7, 50.0], [5.8, 50.0], [5.9, 50.0], [6.0, 50.0], [6.1, 50.0], [6.2, 50.0], [6.3, 50.0], [6.4, 50.0], [6.5, 50.0], [6.6, 50.0], [6.7, 50.0], [6.8, 50.0], [6.9, 50.0], [7.0, 50.0], [7.1, 50.0], [7.2, 50.0], [7.3, 50.0], [7.4, 50.0], [7.5, 50.0], [7.6, 50.0], [7.7, 50.0], [7.8, 50.0], [7.9, 50.0], [8.0, 50.0], [8.1, 50.0], [8.2, 50.0], [8.3, 50.0], [8.4, 50.0], [8.5, 50.0], [8.6, 50.0], [8.7, 50.0], [8.8, 50.0], [8.9, 50.0], [9.0, 50.0], [9.1, 50.0], [9.2, 50.0], [9.3, 50.0], [9.4, 50.0], [9.5, 50.0], [9.6, 50.0], [9.7, 50.0], [9.8, 50.0], [9.9, 50.0], [10.0, 50.0], [10.1, 50.0], [10.2, 50.0], [10.3, 50.0], [10.4, 50.0], [10.5, 50.0], [10.6, 50.0], [10.7, 50.0], [10.8, 50.0], [10.9, 50.0], [11.0, 50.0], [11.1, 50.0], [11.2, 50.0], [11.3, 50.0], [11.4, 50.0], [11.5, 50.0], [11.6, 50.0], [11.7, 50.0], [11.8, 50.0], [11.9, 50.0], [12.0, 50.0], [12.1, 50.0], [12.2, 50.0], [12.3, 50.0], [12.4, 51.0], [12.5, 51.0], [12.6, 51.0], [12.7, 51.0], [12.8, 51.0], [12.9, 51.0], [13.0, 51.0], [13.1, 51.0], [13.2, 51.0], [13.3, 51.0], [13.4, 51.0], [13.5, 51.0], [13.6, 51.0], [13.7, 51.0], [13.8, 51.0], [13.9, 51.0], [14.0, 51.0], [14.1, 51.0], [14.2, 51.0], [14.3, 51.0], [14.4, 51.0], [14.5, 51.0], [14.6, 51.0], [14.7, 51.0], [14.8, 51.0], [14.9, 51.0], [15.0, 51.0], [15.1, 51.0], [15.2, 51.0], [15.3, 51.0], [15.4, 51.0], [15.5, 51.0], [15.6, 51.0], [15.7, 51.0], [15.8, 51.0], [15.9, 51.0], [16.0, 51.0], [16.1, 51.0], [16.2, 51.0], [16.3, 51.0], [16.4, 51.0], [16.5, 51.0], [16.6, 51.0], [16.7, 51.0], [16.8, 51.0], [16.9, 51.0], [17.0, 51.0], [17.1, 51.0], [17.2, 51.0], [17.3, 51.0], [17.4, 51.0], [17.5, 51.0], [17.6, 51.0], [17.7, 51.0], [17.8, 51.0], [17.9, 51.0], [18.0, 51.0], [18.1, 51.0], [18.2, 51.0], [18.3, 51.0], [18.4, 51.0], [18.5, 51.0], [18.6, 51.0], [18.7, 51.0], [18.8, 51.0], [18.9, 51.0], [19.0, 51.0], [19.1, 51.0], [19.2, 51.0], [19.3, 51.0], [19.4, 51.0], [19.5, 51.0], [19.6, 51.0], [19.7, 51.0], [19.8, 51.0], [19.9, 51.0], [20.0, 51.0], [20.1, 51.0], [20.2, 51.0], [20.3, 51.0], [20.4, 51.0], [20.5, 51.0], [20.6, 51.0], [20.7, 51.0], [20.8, 51.0], [20.9, 51.0], [21.0, 51.0], [21.1, 51.0], [21.2, 51.0], [21.3, 51.0], [21.4, 51.0], [21.5, 51.0], [21.6, 51.0], [21.7, 51.0], [21.8, 51.0], [21.9, 51.0], [22.0, 51.0], [22.1, 51.0], [22.2, 51.0], [22.3, 51.0], [22.4, 51.0], [22.5, 51.0], [22.6, 51.0], [22.7, 51.0], [22.8, 51.0], [22.9, 51.0], [23.0, 51.0], [23.1, 51.0], [23.2, 51.0], [23.3, 51.0], [23.4, 51.0], [23.5, 51.0], [23.6, 51.0], [23.7, 51.0], [23.8, 51.0], [23.9, 51.0], [24.0, 51.0], [24.1, 51.0], [24.2, 51.0], [24.3, 51.0], [24.4, 51.0], [24.5, 51.0], [24.6, 51.0], [24.7, 51.0], [24.8, 51.0], [24.9, 51.0], [25.0, 51.0], [25.1, 51.0], [25.2, 51.0], [25.3, 51.0], [25.4, 51.0], [25.5, 51.0], [25.6, 52.0], [25.7, 52.0], [25.8, 52.0], [25.9, 52.0], [26.0, 52.0], [26.1, 52.0], [26.2, 52.0], [26.3, 52.0], [26.4, 52.0], [26.5, 52.0], [26.6, 52.0], [26.7, 52.0], [26.8, 52.0], [26.9, 52.0], [27.0, 52.0], [27.1, 52.0], [27.2, 52.0], [27.3, 52.0], [27.4, 52.0], [27.5, 52.0], [27.6, 52.0], [27.7, 52.0], [27.8, 52.0], [27.9, 52.0], [28.0, 52.0], [28.1, 52.0], [28.2, 52.0], [28.3, 52.0], [28.4, 52.0], [28.5, 52.0], [28.6, 52.0], [28.7, 52.0], [28.8, 52.0], [28.9, 52.0], [29.0, 52.0], [29.1, 52.0], [29.2, 52.0], [29.3, 52.0], [29.4, 52.0], [29.5, 52.0], [29.6, 52.0], [29.7, 52.0], [29.8, 52.0], [29.9, 52.0], [30.0, 52.0], [30.1, 52.0], [30.2, 52.0], [30.3, 52.0], [30.4, 52.0], [30.5, 52.0], [30.6, 52.0], [30.7, 52.0], [30.8, 52.0], [30.9, 52.0], [31.0, 52.0], [31.1, 52.0], [31.2, 52.0], [31.3, 52.0], [31.4, 52.0], [31.5, 52.0], [31.6, 52.0], [31.7, 52.0], [31.8, 52.0], [31.9, 52.0], [32.0, 52.0], [32.1, 52.0], [32.2, 52.0], [32.3, 52.0], [32.4, 52.0], [32.5, 52.0], [32.6, 52.0], [32.7, 52.0], [32.8, 52.0], [32.9, 52.0], [33.0, 52.0], [33.1, 52.0], [33.2, 52.0], [33.3, 52.0], [33.4, 52.0], [33.5, 52.0], [33.6, 52.0], [33.7, 52.0], [33.8, 52.0], [33.9, 52.0], [34.0, 52.0], [34.1, 52.0], [34.2, 52.0], [34.3, 52.0], [34.4, 52.0], [34.5, 53.0], [34.6, 53.0], [34.7, 53.0], [34.8, 53.0], [34.9, 53.0], [35.0, 53.0], [35.1, 53.0], [35.2, 53.0], [35.3, 53.0], [35.4, 53.0], [35.5, 53.0], [35.6, 53.0], [35.7, 53.0], [35.8, 53.0], [35.9, 53.0], [36.0, 53.0], [36.1, 53.0], [36.2, 53.0], [36.3, 53.0], [36.4, 53.0], [36.5, 53.0], [36.6, 53.0], [36.7, 53.0], [36.8, 53.0], [36.9, 53.0], [37.0, 53.0], [37.1, 53.0], [37.2, 53.0], [37.3, 53.0], [37.4, 53.0], [37.5, 53.0], [37.6, 53.0], [37.7, 53.0], [37.8, 53.0], [37.9, 53.0], [38.0, 53.0], [38.1, 53.0], [38.2, 53.0], [38.3, 53.0], [38.4, 53.0], [38.5, 53.0], [38.6, 53.0], [38.7, 53.0], [38.8, 53.0], [38.9, 53.0], [39.0, 53.0], [39.1, 53.0], [39.2, 53.0], [39.3, 53.0], [39.4, 53.0], [39.5, 53.0], [39.6, 53.0], [39.7, 53.0], [39.8, 53.0], [39.9, 54.0], [40.0, 54.0], [40.1, 54.0], [40.2, 54.0], [40.3, 54.0], [40.4, 54.0], [40.5, 54.0], [40.6, 54.0], [40.7, 54.0], [40.8, 54.0], [40.9, 54.0], [41.0, 54.0], [41.1, 54.0], [41.2, 54.0], [41.3, 54.0], [41.4, 54.0], [41.5, 54.0], [41.6, 54.0], [41.7, 54.0], [41.8, 54.0], [41.9, 54.0], [42.0, 54.0], [42.1, 54.0], [42.2, 54.0], [42.3, 54.0], [42.4, 54.0], [42.5, 54.0], [42.6, 54.0], [42.7, 54.0], [42.8, 54.0], [42.9, 54.0], [43.0, 54.0], [43.1, 54.0], [43.2, 54.0], [43.3, 54.0], [43.4, 54.0], [43.5, 55.0], [43.6, 55.0], [43.7, 55.0], [43.8, 55.0], [43.9, 55.0], [44.0, 55.0], [44.1, 55.0], [44.2, 55.0], [44.3, 55.0], [44.4, 55.0], [44.5, 55.0], [44.6, 55.0], [44.7, 55.0], [44.8, 55.0], [44.9, 55.0], [45.0, 55.0], [45.1, 55.0], [45.2, 55.0], [45.3, 55.0], [45.4, 55.0], [45.5, 55.0], [45.6, 55.0], [45.7, 55.0], [45.8, 55.0], [45.9, 55.0], [46.0, 55.0], [46.1, 55.0], [46.2, 55.0], [46.3, 55.0], [46.4, 56.0], [46.5, 56.0], [46.6, 56.0], [46.7, 56.0], [46.8, 56.0], [46.9, 56.0], [47.0, 56.0], [47.1, 56.0], [47.2, 56.0], [47.3, 56.0], [47.4, 56.0], [47.5, 56.0], [47.6, 56.0], [47.7, 56.0], [47.8, 56.0], [47.9, 56.0], [48.0, 56.0], [48.1, 56.0], [48.2, 56.0], [48.3, 56.0], [48.4, 56.0], [48.5, 57.0], [48.6, 57.0], [48.7, 57.0], [48.8, 57.0], [48.9, 57.0], [49.0, 57.0], [49.1, 57.0], [49.2, 57.0], [49.3, 57.0], [49.4, 57.0], [49.5, 57.0], [49.6, 57.0], [49.7, 57.0], [49.8, 57.0], [49.9, 57.0], [50.0, 57.0], [50.1, 57.0], [50.2, 57.0], [50.3, 57.0], [50.4, 57.0], [50.5, 57.0], [50.6, 58.0], [50.7, 58.0], [50.8, 58.0], [50.9, 58.0], [51.0, 58.0], [51.1, 58.0], [51.2, 58.0], [51.3, 58.0], [51.4, 58.0], [51.5, 58.0], [51.6, 58.0], [51.7, 58.0], [51.8, 58.0], [51.9, 58.0], [52.0, 59.0], [52.1, 59.0], [52.2, 59.0], [52.3, 59.0], [52.4, 59.0], [52.5, 59.0], [52.6, 59.0], [52.7, 59.0], [52.8, 59.0], [52.9, 59.0], [53.0, 59.0], [53.1, 59.0], [53.2, 59.0], [53.3, 59.0], [53.4, 60.0], [53.5, 60.0], [53.6, 60.0], [53.7, 60.0], [53.8, 60.0], [53.9, 60.0], [54.0, 60.0], [54.1, 60.0], [54.2, 60.0], [54.3, 60.0], [54.4, 60.0], [54.5, 60.0], [54.6, 60.0], [54.7, 60.0], [54.8, 61.0], [54.9, 61.0], [55.0, 61.0], [55.1, 61.0], [55.2, 61.0], [55.3, 61.0], [55.4, 61.0], [55.5, 61.0], [55.6, 61.0], [55.7, 61.0], [55.8, 61.0], [55.9, 61.0], [56.0, 61.0], [56.1, 61.0], [56.2, 61.0], [56.3, 61.0], [56.4, 61.0], [56.5, 61.0], [56.6, 61.0], [56.7, 61.0], [56.8, 61.0], [56.9, 61.0], [57.0, 61.0], [57.1, 61.0], [57.2, 61.0], [57.3, 61.0], [57.4, 61.0], [57.5, 61.0], [57.6, 61.0], [57.7, 61.0], [57.8, 61.0], [57.9, 61.0], [58.0, 61.0], [58.1, 61.0], [58.2, 62.0], [58.3, 62.0], [58.4, 62.0], [58.5, 62.0], [58.6, 62.0], [58.7, 62.0], [58.8, 62.0], [58.9, 62.0], [59.0, 62.0], [59.1, 62.0], [59.2, 62.0], [59.3, 62.0], [59.4, 62.0], [59.5, 62.0], [59.6, 62.0], [59.7, 62.0], [59.8, 62.0], [59.9, 62.0], [60.0, 62.0], [60.1, 62.0], [60.2, 62.0], [60.3, 62.0], [60.4, 62.0], [60.5, 62.0], [60.6, 62.0], [60.7, 62.0], [60.8, 62.0], [60.9, 62.0], [61.0, 62.0], [61.1, 62.0], [61.2, 62.0], [61.3, 62.0], [61.4, 62.0], [61.5, 62.0], [61.6, 62.0], [61.7, 62.0], [61.8, 62.0], [61.9, 62.0], [62.0, 62.0], [62.1, 62.0], [62.2, 62.0], [62.3, 62.0], [62.4, 62.0], [62.5, 62.0], [62.6, 62.0], [62.7, 62.0], [62.8, 62.0], [62.9, 62.0], [63.0, 62.0], [63.1, 62.0], [63.2, 62.0], [63.3, 62.0], [63.4, 62.0], [63.5, 62.0], [63.6, 62.0], [63.7, 62.0], [63.8, 63.0], [63.9, 63.0], [64.0, 63.0], [64.1, 63.0], [64.2, 63.0], [64.3, 63.0], [64.4, 63.0], [64.5, 63.0], [64.6, 63.0], [64.7, 63.0], [64.8, 63.0], [64.9, 63.0], [65.0, 63.0], [65.1, 63.0], [65.2, 63.0], [65.3, 63.0], [65.4, 63.0], [65.5, 63.0], [65.6, 63.0], [65.7, 63.0], [65.8, 63.0], [65.9, 63.0], [66.0, 63.0], [66.1, 63.0], [66.2, 63.0], [66.3, 63.0], [66.4, 63.0], [66.5, 63.0], [66.6, 63.0], [66.7, 63.0], [66.8, 63.0], [66.9, 63.0], [67.0, 63.0], [67.1, 63.0], [67.2, 63.0], [67.3, 63.0], [67.4, 63.0], [67.5, 63.0], [67.6, 63.0], [67.7, 63.0], [67.8, 63.0], [67.9, 63.0], [68.0, 63.0], [68.1, 63.0], [68.2, 63.0], [68.3, 63.0], [68.4, 63.0], [68.5, 63.0], [68.6, 63.0], [68.7, 63.0], [68.8, 63.0], [68.9, 63.0], [69.0, 63.0], [69.1, 63.0], [69.2, 64.0], [69.3, 64.0], [69.4, 64.0], [69.5, 64.0], [69.6, 64.0], [69.7, 64.0], [69.8, 64.0], [69.9, 64.0], [70.0, 64.0], [70.1, 64.0], [70.2, 64.0], [70.3, 64.0], [70.4, 64.0], [70.5, 64.0], [70.6, 64.0], [70.7, 64.0], [70.8, 64.0], [70.9, 64.0], [71.0, 64.0], [71.1, 64.0], [71.2, 64.0], [71.3, 64.0], [71.4, 64.0], [71.5, 64.0], [71.6, 64.0], [71.7, 64.0], [71.8, 64.0], [71.9, 64.0], [72.0, 64.0], [72.1, 64.0], [72.2, 64.0], [72.3, 64.0], [72.4, 64.0], [72.5, 64.0], [72.6, 65.0], [72.7, 65.0], [72.8, 65.0], [72.9, 65.0], [73.0, 65.0], [73.1, 65.0], [73.2, 65.0], [73.3, 65.0], [73.4, 65.0], [73.5, 65.0], [73.6, 65.0], [73.7, 65.0], [73.8, 65.0], [73.9, 65.0], [74.0, 65.0], [74.1, 65.0], [74.2, 65.0], [74.3, 65.0], [74.4, 65.0], [74.5, 65.0], [74.6, 65.0], [74.7, 65.0], [74.8, 65.0], [74.9, 65.0], [75.0, 66.0], [75.1, 66.0], [75.2, 66.0], [75.3, 66.0], [75.4, 66.0], [75.5, 66.0], [75.6, 66.0], [75.7, 66.0], [75.8, 66.0], [75.9, 66.0], [76.0, 66.0], [76.1, 66.0], [76.2, 66.0], [76.3, 66.0], [76.4, 66.0], [76.5, 66.0], [76.6, 66.0], [76.7, 66.0], [76.8, 66.0], [76.9, 66.0], [77.0, 66.0], [77.1, 67.0], [77.2, 67.0], [77.3, 67.0], [77.4, 67.0], [77.5, 67.0], [77.6, 67.0], [77.7, 67.0], [77.8, 67.0], [77.9, 67.0], [78.0, 67.0], [78.1, 67.0], [78.2, 67.0], [78.3, 67.0], [78.4, 67.0], [78.5, 67.0], [78.6, 67.0], [78.7, 67.0], [78.8, 67.0], [78.9, 68.0], [79.0, 68.0], [79.1, 68.0], [79.2, 68.0], [79.3, 68.0], [79.4, 68.0], [79.5, 68.0], [79.6, 68.0], [79.7, 68.0], [79.8, 68.0], [79.9, 68.0], [80.0, 68.0], [80.1, 69.0], [80.2, 69.0], [80.3, 69.0], [80.4, 69.0], [80.5, 69.0], [80.6, 69.0], [80.7, 69.0], [80.8, 69.0], [80.9, 69.0], [81.0, 69.0], [81.1, 69.0], [81.2, 69.0], [81.3, 70.0], [81.4, 70.0], [81.5, 70.0], [81.6, 70.0], [81.7, 70.0], [81.8, 70.0], [81.9, 70.0], [82.0, 70.0], [82.1, 70.0], [82.2, 70.0], [82.3, 71.0], [82.4, 71.0], [82.5, 71.0], [82.6, 71.0], [82.7, 71.0], [82.8, 71.0], [82.9, 71.0], [83.0, 72.0], [83.1, 72.0], [83.2, 72.0], [83.3, 72.0], [83.4, 72.0], [83.5, 72.0], [83.6, 73.0], [83.7, 73.0], [83.8, 73.0], [83.9, 73.0], [84.0, 73.0], [84.1, 73.0], [84.2, 73.0], [84.3, 73.0], [84.4, 73.0], [84.5, 74.0], [84.6, 74.0], [84.7, 74.0], [84.8, 74.0], [84.9, 74.0], [85.0, 74.0], [85.1, 74.0], [85.2, 74.0], [85.3, 75.0], [85.4, 75.0], [85.5, 75.0], [85.6, 75.0], [85.7, 75.0], [85.8, 75.0], [85.9, 76.0], [86.0, 76.0], [86.1, 76.0], [86.2, 76.0], [86.3, 76.0], [86.4, 76.0], [86.5, 76.0], [86.6, 77.0], [86.7, 77.0], [86.8, 77.0], [86.9, 77.0], [87.0, 77.0], [87.1, 78.0], [87.2, 78.0], [87.3, 78.0], [87.4, 78.0], [87.5, 78.0], [87.6, 78.0], [87.7, 78.0], [87.8, 79.0], [87.9, 79.0], [88.0, 79.0], [88.1, 79.0], [88.2, 79.0], [88.3, 80.0], [88.4, 80.0], [88.5, 80.0], [88.6, 80.0], [88.7, 80.0], [88.8, 80.0], [88.9, 81.0], [89.0, 81.0], [89.1, 81.0], [89.2, 81.0], [89.3, 82.0], [89.4, 82.0], [89.5, 82.0], [89.6, 82.0], [89.7, 82.0], [89.8, 82.0], [89.9, 83.0], [90.0, 83.0], [90.1, 83.0], [90.2, 84.0], [90.3, 84.0], [90.4, 84.0], [90.5, 84.0], [90.6, 84.0], [90.7, 85.0], [90.8, 85.0], [90.9, 85.0], [91.0, 85.0], [91.1, 86.0], [91.2, 86.0], [91.3, 87.0], [91.4, 87.0], [91.5, 87.0], [91.6, 88.0], [91.7, 88.0], [91.8, 88.0], [91.9, 89.0], [92.0, 89.0], [92.1, 89.0], [92.2, 90.0], [92.3, 90.0], [92.4, 90.0], [92.5, 91.0], [92.6, 91.0], [92.7, 92.0], [92.8, 92.0], [92.9, 92.0], [93.0, 93.0], [93.1, 93.0], [93.2, 94.0], [93.3, 94.0], [93.4, 95.0], [93.5, 95.0], [93.6, 96.0], [93.7, 96.0], [93.8, 97.0], [93.9, 97.0], [94.0, 98.0], [94.1, 98.0], [94.2, 99.0], [94.3, 99.0], [94.4, 100.0], [94.5, 101.0], [94.6, 101.0], [94.7, 102.0], [94.8, 103.0], [94.9, 104.0], [95.0, 105.0], [95.1, 105.0], [95.2, 106.0], [95.3, 108.0], [95.4, 109.0], [95.5, 110.0], [95.6, 111.0], [95.7, 112.0], [95.8, 112.0], [95.9, 114.0], [96.0, 115.0], [96.1, 116.0], [96.2, 117.0], [96.3, 118.0], [96.4, 120.0], [96.5, 121.0], [96.6, 122.0], [96.7, 124.0], [96.8, 125.0], [96.9, 127.0], [97.0, 128.0], [97.1, 130.0], [97.2, 132.0], [97.3, 133.0], [97.4, 134.0], [97.5, 138.0], [97.6, 140.0], [97.7, 145.0], [97.8, 148.0], [97.9, 151.0], [98.0, 155.0], [98.1, 159.0], [98.2, 163.0], [98.3, 166.0], [98.4, 170.0], [98.5, 175.0], [98.6, 179.0], [98.7, 186.0], [98.8, 190.0], [98.9, 196.0], [99.0, 204.0], [99.1, 211.0], [99.2, 220.0], [99.3, 229.0], [99.4, 239.0], [99.5, 272.0], [99.6, 301.0], [99.7, 329.0], [99.8, 391.0], [99.9, 495.0], [100.0, 717.0]], "isOverall": false, "label": "api\/block\u8001\u63A5\u53E3", "isController": false}, {"data": [[0.0, 517.0], [0.1, 519.0], [0.2, 519.0], [0.3, 520.0], [0.4, 520.0], [0.5, 520.0], [0.6, 521.0], [0.7, 521.0], [0.8, 521.0], [0.9, 522.0], [1.0, 522.0], [1.1, 522.0], [1.2, 522.0], [1.3, 522.0], [1.4, 523.0], [1.5, 523.0], [1.6, 523.0], [1.7, 523.0], [1.8, 524.0], [1.9, 524.0], [2.0, 524.0], [2.1, 524.0], [2.2, 524.0], [2.3, 525.0], [2.4, 525.0], [2.5, 525.0], [2.6, 525.0], [2.7, 525.0], [2.8, 525.0], [2.9, 525.0], [3.0, 525.0], [3.1, 526.0], [3.2, 526.0], [3.3, 526.0], [3.4, 526.0], [3.5, 526.0], [3.6, 526.0], [3.7, 527.0], [3.8, 527.0], [3.9, 527.0], [4.0, 527.0], [4.1, 527.0], [4.2, 527.0], [4.3, 527.0], [4.4, 528.0], [4.5, 528.0], [4.6, 528.0], [4.7, 528.0], [4.8, 528.0], [4.9, 528.0], [5.0, 528.0], [5.1, 528.0], [5.2, 529.0], [5.3, 529.0], [5.4, 529.0], [5.5, 529.0], [5.6, 529.0], [5.7, 529.0], [5.8, 529.0], [5.9, 529.0], [6.0, 529.0], [6.1, 529.0], [6.2, 530.0], [6.3, 530.0], [6.4, 530.0], [6.5, 530.0], [6.6, 530.0], [6.7, 530.0], [6.8, 530.0], [6.9, 530.0], [7.0, 530.0], [7.1, 530.0], [7.2, 531.0], [7.3, 531.0], [7.4, 531.0], [7.5, 531.0], [7.6, 531.0], [7.7, 531.0], [7.8, 531.0], [7.9, 531.0], [8.0, 531.0], [8.1, 531.0], [8.2, 531.0], [8.3, 532.0], [8.4, 532.0], [8.5, 532.0], [8.6, 532.0], [8.7, 532.0], [8.8, 532.0], [8.9, 532.0], [9.0, 532.0], [9.1, 532.0], [9.2, 532.0], [9.3, 532.0], [9.4, 532.0], [9.5, 533.0], [9.6, 533.0], [9.7, 533.0], [9.8, 533.0], [9.9, 533.0], [10.0, 533.0], [10.1, 533.0], [10.2, 533.0], [10.3, 533.0], [10.4, 533.0], [10.5, 533.0], [10.6, 533.0], [10.7, 533.0], [10.8, 534.0], [10.9, 534.0], [11.0, 534.0], [11.1, 534.0], [11.2, 534.0], [11.3, 534.0], [11.4, 534.0], [11.5, 534.0], [11.6, 534.0], [11.7, 534.0], [11.8, 534.0], [11.9, 534.0], [12.0, 534.0], [12.1, 534.0], [12.2, 534.0], [12.3, 535.0], [12.4, 535.0], [12.5, 535.0], [12.6, 535.0], [12.7, 535.0], [12.8, 535.0], [12.9, 535.0], [13.0, 535.0], [13.1, 535.0], [13.2, 535.0], [13.3, 535.0], [13.4, 535.0], [13.5, 535.0], [13.6, 535.0], [13.7, 535.0], [13.8, 536.0], [13.9, 536.0], [14.0, 536.0], [14.1, 536.0], [14.2, 536.0], [14.3, 536.0], [14.4, 536.0], [14.5, 536.0], [14.6, 536.0], [14.7, 536.0], [14.8, 536.0], [14.9, 536.0], [15.0, 536.0], [15.1, 536.0], [15.2, 536.0], [15.3, 536.0], [15.4, 536.0], [15.5, 537.0], [15.6, 537.0], [15.7, 537.0], [15.8, 537.0], [15.9, 537.0], [16.0, 537.0], [16.1, 537.0], [16.2, 537.0], [16.3, 537.0], [16.4, 537.0], [16.5, 537.0], [16.6, 537.0], [16.7, 537.0], [16.8, 537.0], [16.9, 537.0], [17.0, 538.0], [17.1, 538.0], [17.2, 538.0], [17.3, 538.0], [17.4, 538.0], [17.5, 538.0], [17.6, 538.0], [17.7, 538.0], [17.8, 538.0], [17.9, 538.0], [18.0, 538.0], [18.1, 538.0], [18.2, 538.0], [18.3, 538.0], [18.4, 538.0], [18.5, 538.0], [18.6, 538.0], [18.7, 538.0], [18.8, 539.0], [18.9, 539.0], [19.0, 539.0], [19.1, 539.0], [19.2, 539.0], [19.3, 539.0], [19.4, 539.0], [19.5, 539.0], [19.6, 539.0], [19.7, 539.0], [19.8, 539.0], [19.9, 539.0], [20.0, 539.0], [20.1, 539.0], [20.2, 539.0], [20.3, 540.0], [20.4, 540.0], [20.5, 540.0], [20.6, 540.0], [20.7, 540.0], [20.8, 540.0], [20.9, 540.0], [21.0, 540.0], [21.1, 540.0], [21.2, 540.0], [21.3, 540.0], [21.4, 540.0], [21.5, 540.0], [21.6, 540.0], [21.7, 540.0], [21.8, 540.0], [21.9, 541.0], [22.0, 541.0], [22.1, 541.0], [22.2, 541.0], [22.3, 541.0], [22.4, 541.0], [22.5, 541.0], [22.6, 541.0], [22.7, 541.0], [22.8, 541.0], [22.9, 541.0], [23.0, 541.0], [23.1, 541.0], [23.2, 541.0], [23.3, 541.0], [23.4, 541.0], [23.5, 542.0], [23.6, 542.0], [23.7, 542.0], [23.8, 542.0], [23.9, 542.0], [24.0, 542.0], [24.1, 542.0], [24.2, 542.0], [24.3, 542.0], [24.4, 542.0], [24.5, 542.0], [24.6, 542.0], [24.7, 542.0], [24.8, 542.0], [24.9, 542.0], [25.0, 542.0], [25.1, 543.0], [25.2, 543.0], [25.3, 543.0], [25.4, 543.0], [25.5, 543.0], [25.6, 543.0], [25.7, 543.0], [25.8, 543.0], [25.9, 543.0], [26.0, 543.0], [26.1, 543.0], [26.2, 543.0], [26.3, 543.0], [26.4, 543.0], [26.5, 543.0], [26.6, 543.0], [26.7, 544.0], [26.8, 544.0], [26.9, 544.0], [27.0, 544.0], [27.1, 544.0], [27.2, 544.0], [27.3, 544.0], [27.4, 544.0], [27.5, 544.0], [27.6, 544.0], [27.7, 544.0], [27.8, 544.0], [27.9, 544.0], [28.0, 544.0], [28.1, 544.0], [28.2, 544.0], [28.3, 545.0], [28.4, 545.0], [28.5, 545.0], [28.6, 545.0], [28.7, 545.0], [28.8, 545.0], [28.9, 545.0], [29.0, 545.0], [29.1, 545.0], [29.2, 545.0], [29.3, 545.0], [29.4, 545.0], [29.5, 545.0], [29.6, 545.0], [29.7, 546.0], [29.8, 546.0], [29.9, 546.0], [30.0, 546.0], [30.1, 546.0], [30.2, 546.0], [30.3, 546.0], [30.4, 546.0], [30.5, 546.0], [30.6, 546.0], [30.7, 546.0], [30.8, 546.0], [30.9, 546.0], [31.0, 546.0], [31.1, 546.0], [31.2, 547.0], [31.3, 547.0], [31.4, 547.0], [31.5, 547.0], [31.6, 547.0], [31.7, 547.0], [31.8, 547.0], [31.9, 547.0], [32.0, 547.0], [32.1, 547.0], [32.2, 547.0], [32.3, 547.0], [32.4, 547.0], [32.5, 547.0], [32.6, 547.0], [32.7, 547.0], [32.8, 547.0], [32.9, 548.0], [33.0, 548.0], [33.1, 548.0], [33.2, 548.0], [33.3, 548.0], [33.4, 548.0], [33.5, 548.0], [33.6, 548.0], [33.7, 548.0], [33.8, 548.0], [33.9, 548.0], [34.0, 548.0], [34.1, 548.0], [34.2, 548.0], [34.3, 549.0], [34.4, 549.0], [34.5, 549.0], [34.6, 549.0], [34.7, 549.0], [34.8, 549.0], [34.9, 549.0], [35.0, 549.0], [35.1, 549.0], [35.2, 549.0], [35.3, 549.0], [35.4, 549.0], [35.5, 549.0], [35.6, 549.0], [35.7, 550.0], [35.8, 550.0], [35.9, 550.0], [36.0, 550.0], [36.1, 550.0], [36.2, 550.0], [36.3, 550.0], [36.4, 550.0], [36.5, 550.0], [36.6, 550.0], [36.7, 550.0], [36.8, 550.0], [36.9, 550.0], [37.0, 550.0], [37.1, 550.0], [37.2, 551.0], [37.3, 551.0], [37.4, 551.0], [37.5, 551.0], [37.6, 551.0], [37.7, 551.0], [37.8, 551.0], [37.9, 551.0], [38.0, 551.0], [38.1, 551.0], [38.2, 551.0], [38.3, 551.0], [38.4, 551.0], [38.5, 551.0], [38.6, 551.0], [38.7, 552.0], [38.8, 552.0], [38.9, 552.0], [39.0, 552.0], [39.1, 552.0], [39.2, 552.0], [39.3, 552.0], [39.4, 552.0], [39.5, 552.0], [39.6, 552.0], [39.7, 552.0], [39.8, 552.0], [39.9, 553.0], [40.0, 553.0], [40.1, 553.0], [40.2, 553.0], [40.3, 553.0], [40.4, 553.0], [40.5, 553.0], [40.6, 553.0], [40.7, 553.0], [40.8, 553.0], [40.9, 553.0], [41.0, 554.0], [41.1, 554.0], [41.2, 554.0], [41.3, 554.0], [41.4, 554.0], [41.5, 554.0], [41.6, 554.0], [41.7, 554.0], [41.8, 554.0], [41.9, 554.0], [42.0, 554.0], [42.1, 554.0], [42.2, 554.0], [42.3, 555.0], [42.4, 555.0], [42.5, 555.0], [42.6, 555.0], [42.7, 555.0], [42.8, 555.0], [42.9, 555.0], [43.0, 555.0], [43.1, 555.0], [43.2, 555.0], [43.3, 555.0], [43.4, 555.0], [43.5, 555.0], [43.6, 555.0], [43.7, 555.0], [43.8, 556.0], [43.9, 556.0], [44.0, 556.0], [44.1, 556.0], [44.2, 556.0], [44.3, 556.0], [44.4, 556.0], [44.5, 556.0], [44.6, 556.0], [44.7, 556.0], [44.8, 556.0], [44.9, 557.0], [45.0, 557.0], [45.1, 557.0], [45.2, 557.0], [45.3, 557.0], [45.4, 557.0], [45.5, 557.0], [45.6, 557.0], [45.7, 557.0], [45.8, 557.0], [45.9, 557.0], [46.0, 558.0], [46.1, 558.0], [46.2, 558.0], [46.3, 558.0], [46.4, 558.0], [46.5, 558.0], [46.6, 558.0], [46.7, 558.0], [46.8, 558.0], [46.9, 558.0], [47.0, 558.0], [47.1, 558.0], [47.2, 559.0], [47.3, 559.0], [47.4, 559.0], [47.5, 559.0], [47.6, 559.0], [47.7, 559.0], [47.8, 559.0], [47.9, 559.0], [48.0, 559.0], [48.1, 559.0], [48.2, 559.0], [48.3, 559.0], [48.4, 560.0], [48.5, 560.0], [48.6, 560.0], [48.7, 560.0], [48.8, 560.0], [48.9, 560.0], [49.0, 560.0], [49.1, 560.0], [49.2, 560.0], [49.3, 560.0], [49.4, 561.0], [49.5, 561.0], [49.6, 561.0], [49.7, 561.0], [49.8, 561.0], [49.9, 561.0], [50.0, 561.0], [50.1, 561.0], [50.2, 562.0], [50.3, 562.0], [50.4, 562.0], [50.5, 562.0], [50.6, 562.0], [50.7, 562.0], [50.8, 562.0], [50.9, 562.0], [51.0, 562.0], [51.1, 562.0], [51.2, 562.0], [51.3, 562.0], [51.4, 563.0], [51.5, 563.0], [51.6, 563.0], [51.7, 563.0], [51.8, 563.0], [51.9, 563.0], [52.0, 563.0], [52.1, 563.0], [52.2, 563.0], [52.3, 563.0], [52.4, 563.0], [52.5, 564.0], [52.6, 564.0], [52.7, 564.0], [52.8, 564.0], [52.9, 564.0], [53.0, 564.0], [53.1, 564.0], [53.2, 564.0], [53.3, 564.0], [53.4, 564.0], [53.5, 564.0], [53.6, 565.0], [53.7, 565.0], [53.8, 565.0], [53.9, 565.0], [54.0, 565.0], [54.1, 565.0], [54.2, 565.0], [54.3, 565.0], [54.4, 565.0], [54.5, 566.0], [54.6, 566.0], [54.7, 566.0], [54.8, 566.0], [54.9, 566.0], [55.0, 566.0], [55.1, 566.0], [55.2, 566.0], [55.3, 566.0], [55.4, 567.0], [55.5, 567.0], [55.6, 567.0], [55.7, 567.0], [55.8, 567.0], [55.9, 567.0], [56.0, 567.0], [56.1, 567.0], [56.2, 567.0], [56.3, 568.0], [56.4, 568.0], [56.5, 568.0], [56.6, 568.0], [56.7, 568.0], [56.8, 568.0], [56.9, 568.0], [57.0, 568.0], [57.1, 568.0], [57.2, 568.0], [57.3, 569.0], [57.4, 569.0], [57.5, 569.0], [57.6, 569.0], [57.7, 569.0], [57.8, 569.0], [57.9, 569.0], [58.0, 569.0], [58.1, 570.0], [58.2, 570.0], [58.3, 570.0], [58.4, 570.0], [58.5, 570.0], [58.6, 570.0], [58.7, 570.0], [58.8, 571.0], [58.9, 571.0], [59.0, 571.0], [59.1, 571.0], [59.2, 571.0], [59.3, 571.0], [59.4, 571.0], [59.5, 571.0], [59.6, 572.0], [59.7, 572.0], [59.8, 572.0], [59.9, 572.0], [60.0, 572.0], [60.1, 573.0], [60.2, 573.0], [60.3, 573.0], [60.4, 573.0], [60.5, 573.0], [60.6, 573.0], [60.7, 574.0], [60.8, 574.0], [60.9, 574.0], [61.0, 574.0], [61.1, 574.0], [61.2, 574.0], [61.3, 574.0], [61.4, 575.0], [61.5, 575.0], [61.6, 575.0], [61.7, 575.0], [61.8, 575.0], [61.9, 575.0], [62.0, 575.0], [62.1, 576.0], [62.2, 576.0], [62.3, 576.0], [62.4, 576.0], [62.5, 576.0], [62.6, 576.0], [62.7, 576.0], [62.8, 577.0], [62.9, 577.0], [63.0, 577.0], [63.1, 577.0], [63.2, 577.0], [63.3, 578.0], [63.4, 578.0], [63.5, 578.0], [63.6, 578.0], [63.7, 578.0], [63.8, 578.0], [63.9, 578.0], [64.0, 578.0], [64.1, 579.0], [64.2, 579.0], [64.3, 579.0], [64.4, 579.0], [64.5, 579.0], [64.6, 579.0], [64.7, 580.0], [64.8, 580.0], [64.9, 580.0], [65.0, 580.0], [65.1, 580.0], [65.2, 580.0], [65.3, 580.0], [65.4, 581.0], [65.5, 581.0], [65.6, 581.0], [65.7, 581.0], [65.8, 581.0], [65.9, 582.0], [66.0, 582.0], [66.1, 582.0], [66.2, 582.0], [66.3, 582.0], [66.4, 582.0], [66.5, 583.0], [66.6, 583.0], [66.7, 583.0], [66.8, 583.0], [66.9, 584.0], [67.0, 584.0], [67.1, 584.0], [67.2, 584.0], [67.3, 584.0], [67.4, 585.0], [67.5, 585.0], [67.6, 585.0], [67.7, 585.0], [67.8, 586.0], [67.9, 586.0], [68.0, 586.0], [68.1, 586.0], [68.2, 586.0], [68.3, 587.0], [68.4, 587.0], [68.5, 587.0], [68.6, 587.0], [68.7, 587.0], [68.8, 588.0], [68.9, 588.0], [69.0, 588.0], [69.1, 588.0], [69.2, 588.0], [69.3, 589.0], [69.4, 589.0], [69.5, 589.0], [69.6, 589.0], [69.7, 589.0], [69.8, 589.0], [69.9, 590.0], [70.0, 590.0], [70.1, 590.0], [70.2, 591.0], [70.3, 591.0], [70.4, 591.0], [70.5, 591.0], [70.6, 592.0], [70.7, 592.0], [70.8, 592.0], [70.9, 592.0], [71.0, 592.0], [71.1, 592.0], [71.2, 593.0], [71.3, 593.0], [71.4, 593.0], [71.5, 594.0], [71.6, 594.0], [71.7, 594.0], [71.8, 595.0], [71.9, 595.0], [72.0, 595.0], [72.1, 595.0], [72.2, 596.0], [72.3, 596.0], [72.4, 596.0], [72.5, 596.0], [72.6, 597.0], [72.7, 597.0], [72.8, 597.0], [72.9, 598.0], [73.0, 598.0], [73.1, 598.0], [73.2, 599.0], [73.3, 599.0], [73.4, 599.0], [73.5, 600.0], [73.6, 600.0], [73.7, 600.0], [73.8, 601.0], [73.9, 601.0], [74.0, 601.0], [74.1, 601.0], [74.2, 602.0], [74.3, 602.0], [74.4, 602.0], [74.5, 603.0], [74.6, 603.0], [74.7, 603.0], [74.8, 604.0], [74.9, 604.0], [75.0, 604.0], [75.1, 605.0], [75.2, 605.0], [75.3, 605.0], [75.4, 606.0], [75.5, 606.0], [75.6, 606.0], [75.7, 607.0], [75.8, 607.0], [75.9, 608.0], [76.0, 608.0], [76.1, 608.0], [76.2, 609.0], [76.3, 609.0], [76.4, 609.0], [76.5, 610.0], [76.6, 610.0], [76.7, 611.0], [76.8, 611.0], [76.9, 612.0], [77.0, 612.0], [77.1, 612.0], [77.2, 613.0], [77.3, 613.0], [77.4, 614.0], [77.5, 614.0], [77.6, 614.0], [77.7, 615.0], [77.8, 615.0], [77.9, 615.0], [78.0, 616.0], [78.1, 616.0], [78.2, 617.0], [78.3, 618.0], [78.4, 618.0], [78.5, 619.0], [78.6, 619.0], [78.7, 620.0], [78.8, 620.0], [78.9, 621.0], [79.0, 621.0], [79.1, 622.0], [79.2, 623.0], [79.3, 623.0], [79.4, 624.0], [79.5, 624.0], [79.6, 625.0], [79.7, 625.0], [79.8, 626.0], [79.9, 626.0], [80.0, 626.0], [80.1, 627.0], [80.2, 627.0], [80.3, 628.0], [80.4, 628.0], [80.5, 629.0], [80.6, 630.0], [80.7, 630.0], [80.8, 631.0], [80.9, 631.0], [81.0, 632.0], [81.1, 632.0], [81.2, 633.0], [81.3, 634.0], [81.4, 635.0], [81.5, 635.0], [81.6, 636.0], [81.7, 636.0], [81.8, 637.0], [81.9, 637.0], [82.0, 638.0], [82.1, 639.0], [82.2, 640.0], [82.3, 640.0], [82.4, 641.0], [82.5, 641.0], [82.6, 643.0], [82.7, 643.0], [82.8, 644.0], [82.9, 646.0], [83.0, 646.0], [83.1, 647.0], [83.2, 647.0], [83.3, 648.0], [83.4, 649.0], [83.5, 649.0], [83.6, 650.0], [83.7, 651.0], [83.8, 651.0], [83.9, 652.0], [84.0, 653.0], [84.1, 654.0], [84.2, 654.0], [84.3, 655.0], [84.4, 655.0], [84.5, 657.0], [84.6, 657.0], [84.7, 658.0], [84.8, 659.0], [84.9, 660.0], [85.0, 661.0], [85.1, 662.0], [85.2, 664.0], [85.3, 664.0], [85.4, 665.0], [85.5, 666.0], [85.6, 667.0], [85.7, 667.0], [85.8, 668.0], [85.9, 669.0], [86.0, 670.0], [86.1, 671.0], [86.2, 672.0], [86.3, 673.0], [86.4, 674.0], [86.5, 676.0], [86.6, 677.0], [86.7, 678.0], [86.8, 679.0], [86.9, 679.0], [87.0, 680.0], [87.1, 681.0], [87.2, 682.0], [87.3, 683.0], [87.4, 684.0], [87.5, 685.0], [87.6, 686.0], [87.7, 687.0], [87.8, 687.0], [87.9, 688.0], [88.0, 689.0], [88.1, 690.0], [88.2, 692.0], [88.3, 693.0], [88.4, 694.0], [88.5, 694.0], [88.6, 695.0], [88.7, 697.0], [88.8, 699.0], [88.9, 700.0], [89.0, 701.0], [89.1, 702.0], [89.2, 704.0], [89.3, 705.0], [89.4, 706.0], [89.5, 707.0], [89.6, 708.0], [89.7, 709.0], [89.8, 710.0], [89.9, 711.0], [90.0, 712.0], [90.1, 713.0], [90.2, 716.0], [90.3, 717.0], [90.4, 718.0], [90.5, 720.0], [90.6, 721.0], [90.7, 722.0], [90.8, 724.0], [90.9, 726.0], [91.0, 728.0], [91.1, 729.0], [91.2, 730.0], [91.3, 731.0], [91.4, 733.0], [91.5, 735.0], [91.6, 736.0], [91.7, 738.0], [91.8, 739.0], [91.9, 740.0], [92.0, 742.0], [92.1, 743.0], [92.2, 745.0], [92.3, 746.0], [92.4, 748.0], [92.5, 749.0], [92.6, 751.0], [92.7, 753.0], [92.8, 755.0], [92.9, 756.0], [93.0, 758.0], [93.1, 760.0], [93.2, 761.0], [93.3, 764.0], [93.4, 766.0], [93.5, 768.0], [93.6, 770.0], [93.7, 772.0], [93.8, 773.0], [93.9, 774.0], [94.0, 775.0], [94.1, 777.0], [94.2, 781.0], [94.3, 784.0], [94.4, 788.0], [94.5, 791.0], [94.6, 793.0], [94.7, 795.0], [94.8, 797.0], [94.9, 800.0], [95.0, 803.0], [95.1, 805.0], [95.2, 807.0], [95.3, 810.0], [95.4, 814.0], [95.5, 817.0], [95.6, 821.0], [95.7, 824.0], [95.8, 826.0], [95.9, 828.0], [96.0, 830.0], [96.1, 833.0], [96.2, 837.0], [96.3, 844.0], [96.4, 847.0], [96.5, 851.0], [96.6, 855.0], [96.7, 860.0], [96.8, 867.0], [96.9, 870.0], [97.0, 872.0], [97.1, 876.0], [97.2, 881.0], [97.3, 884.0], [97.4, 889.0], [97.5, 893.0], [97.6, 897.0], [97.7, 904.0], [97.8, 909.0], [97.9, 916.0], [98.0, 923.0], [98.1, 930.0], [98.2, 937.0], [98.3, 941.0], [98.4, 948.0], [98.5, 955.0], [98.6, 960.0], [98.7, 967.0], [98.8, 975.0], [98.9, 983.0], [99.0, 990.0], [99.1, 998.0], [99.2, 1002.0], [99.3, 1010.0], [99.4, 1020.0], [99.5, 1034.0], [99.6, 1051.0], [99.7, 1072.0], [99.8, 1101.0], [99.9, 1203.0], [100.0, 1577.0]], "isOverall": false, "label": "api\/block\u8001\u63A5\u53E3\u4E0D\u5E26\u53C2\u6570", "isController": false}, {"data": [[0.0, 0.0], [0.1, 0.0], [0.2, 0.0], [0.3, 0.0], [0.4, 0.0], [0.5, 0.0], [0.6, 0.0], [0.7, 0.0], [0.8, 0.0], [0.9, 0.0], [1.0, 0.0], [1.1, 0.0], [1.2, 0.0], [1.3, 0.0], [1.4, 0.0], [1.5, 0.0], [1.6, 0.0], [1.7, 0.0], [1.8, 0.0], [1.9, 0.0], [2.0, 0.0], [2.1, 0.0], [2.2, 0.0], [2.3, 0.0], [2.4, 0.0], [2.5, 0.0], [2.6, 0.0], [2.7, 0.0], [2.8, 0.0], [2.9, 0.0], [3.0, 0.0], [3.1, 0.0], [3.2, 0.0], [3.3, 0.0], [3.4, 0.0], [3.5, 0.0], [3.6, 0.0], [3.7, 0.0], [3.8, 0.0], [3.9, 0.0], [4.0, 0.0], [4.1, 0.0], [4.2, 0.0], [4.3, 0.0], [4.4, 0.0], [4.5, 0.0], [4.6, 0.0], [4.7, 0.0], [4.8, 0.0], [4.9, 0.0], [5.0, 0.0], [5.1, 0.0], [5.2, 0.0], [5.3, 0.0], [5.4, 0.0], [5.5, 0.0], [5.6, 0.0], [5.7, 0.0], [5.8, 0.0], [5.9, 0.0], [6.0, 0.0], [6.1, 0.0], [6.2, 0.0], [6.3, 0.0], [6.4, 0.0], [6.5, 0.0], [6.6, 0.0], [6.7, 0.0], [6.8, 0.0], [6.9, 0.0], [7.0, 0.0], [7.1, 0.0], [7.2, 0.0], [7.3, 0.0], [7.4, 0.0], [7.5, 0.0], [7.6, 0.0], [7.7, 0.0], [7.8, 0.0], [7.9, 0.0], [8.0, 0.0], [8.1, 0.0], [8.2, 0.0], [8.3, 0.0], [8.4, 0.0], [8.5, 0.0], [8.6, 0.0], [8.7, 0.0], [8.8, 0.0], [8.9, 0.0], [9.0, 0.0], [9.1, 0.0], [9.2, 0.0], [9.3, 0.0], [9.4, 0.0], [9.5, 0.0], [9.6, 0.0], [9.7, 0.0], [9.8, 0.0], [9.9, 0.0], [10.0, 0.0], [10.1, 0.0], [10.2, 0.0], [10.3, 0.0], [10.4, 0.0], [10.5, 0.0], [10.6, 0.0], [10.7, 0.0], [10.8, 0.0], [10.9, 0.0], [11.0, 0.0], [11.1, 0.0], [11.2, 0.0], [11.3, 0.0], [11.4, 0.0], [11.5, 0.0], [11.6, 0.0], [11.7, 0.0], [11.8, 0.0], [11.9, 0.0], [12.0, 0.0], [12.1, 0.0], [12.2, 0.0], [12.3, 0.0], [12.4, 0.0], [12.5, 0.0], [12.6, 0.0], [12.7, 0.0], [12.8, 0.0], [12.9, 0.0], [13.0, 0.0], [13.1, 0.0], [13.2, 0.0], [13.3, 0.0], [13.4, 0.0], [13.5, 0.0], [13.6, 0.0], [13.7, 0.0], [13.8, 0.0], [13.9, 0.0], [14.0, 0.0], [14.1, 0.0], [14.2, 0.0], [14.3, 0.0], [14.4, 0.0], [14.5, 0.0], [14.6, 0.0], [14.7, 0.0], [14.8, 0.0], [14.9, 0.0], [15.0, 0.0], [15.1, 0.0], [15.2, 0.0], [15.3, 0.0], [15.4, 0.0], [15.5, 0.0], [15.6, 0.0], [15.7, 0.0], [15.8, 0.0], [15.9, 0.0], [16.0, 0.0], [16.1, 0.0], [16.2, 0.0], [16.3, 0.0], [16.4, 0.0], [16.5, 0.0], [16.6, 0.0], [16.7, 0.0], [16.8, 0.0], [16.9, 0.0], [17.0, 0.0], [17.1, 0.0], [17.2, 0.0], [17.3, 0.0], [17.4, 0.0], [17.5, 0.0], [17.6, 0.0], [17.7, 0.0], [17.8, 0.0], [17.9, 0.0], [18.0, 0.0], [18.1, 0.0], [18.2, 0.0], [18.3, 0.0], [18.4, 0.0], [18.5, 0.0], [18.6, 0.0], [18.7, 0.0], [18.8, 0.0], [18.9, 0.0], [19.0, 0.0], [19.1, 0.0], [19.2, 0.0], [19.3, 0.0], [19.4, 0.0], [19.5, 0.0], [19.6, 0.0], [19.7, 0.0], [19.8, 0.0], [19.9, 0.0], [20.0, 0.0], [20.1, 0.0], [20.2, 0.0], [20.3, 0.0], [20.4, 0.0], [20.5, 0.0], [20.6, 0.0], [20.7, 0.0], [20.8, 0.0], [20.9, 0.0], [21.0, 0.0], [21.1, 0.0], [21.2, 0.0], [21.3, 0.0], [21.4, 0.0], [21.5, 0.0], [21.6, 0.0], [21.7, 0.0], [21.8, 0.0], [21.9, 0.0], [22.0, 0.0], [22.1, 0.0], [22.2, 0.0], [22.3, 0.0], [22.4, 0.0], [22.5, 0.0], [22.6, 0.0], [22.7, 0.0], [22.8, 0.0], [22.9, 0.0], [23.0, 0.0], [23.1, 0.0], [23.2, 0.0], [23.3, 0.0], [23.4, 0.0], [23.5, 0.0], [23.6, 0.0], [23.7, 0.0], [23.8, 0.0], [23.9, 0.0], [24.0, 0.0], [24.1, 0.0], [24.2, 0.0], [24.3, 0.0], [24.4, 0.0], [24.5, 0.0], [24.6, 0.0], [24.7, 0.0], [24.8, 0.0], [24.9, 0.0], [25.0, 0.0], [25.1, 0.0], [25.2, 0.0], [25.3, 0.0], [25.4, 0.0], [25.5, 0.0], [25.6, 0.0], [25.7, 0.0], [25.8, 0.0], [25.9, 0.0], [26.0, 0.0], [26.1, 0.0], [26.2, 0.0], [26.3, 0.0], [26.4, 0.0], [26.5, 0.0], [26.6, 0.0], [26.7, 0.0], [26.8, 0.0], [26.9, 0.0], [27.0, 0.0], [27.1, 0.0], [27.2, 0.0], [27.3, 0.0], [27.4, 0.0], [27.5, 0.0], [27.6, 0.0], [27.7, 0.0], [27.8, 0.0], [27.9, 0.0], [28.0, 0.0], [28.1, 0.0], [28.2, 0.0], [28.3, 0.0], [28.4, 0.0], [28.5, 0.0], [28.6, 0.0], [28.7, 0.0], [28.8, 0.0], [28.9, 0.0], [29.0, 0.0], [29.1, 0.0], [29.2, 0.0], [29.3, 0.0], [29.4, 0.0], [29.5, 0.0], [29.6, 0.0], [29.7, 0.0], [29.8, 0.0], [29.9, 0.0], [30.0, 0.0], [30.1, 0.0], [30.2, 0.0], [30.3, 0.0], [30.4, 0.0], [30.5, 0.0], [30.6, 0.0], [30.7, 0.0], [30.8, 0.0], [30.9, 0.0], [31.0, 0.0], [31.1, 0.0], [31.2, 0.0], [31.3, 0.0], [31.4, 0.0], [31.5, 0.0], [31.6, 0.0], [31.7, 0.0], [31.8, 0.0], [31.9, 0.0], [32.0, 0.0], [32.1, 0.0], [32.2, 0.0], [32.3, 0.0], [32.4, 0.0], [32.5, 0.0], [32.6, 0.0], [32.7, 0.0], [32.8, 0.0], [32.9, 0.0], [33.0, 0.0], [33.1, 0.0], [33.2, 0.0], [33.3, 0.0], [33.4, 0.0], [33.5, 0.0], [33.6, 0.0], [33.7, 0.0], [33.8, 0.0], [33.9, 0.0], [34.0, 0.0], [34.1, 0.0], [34.2, 0.0], [34.3, 0.0], [34.4, 0.0], [34.5, 0.0], [34.6, 0.0], [34.7, 0.0], [34.8, 0.0], [34.9, 0.0], [35.0, 0.0], [35.1, 0.0], [35.2, 0.0], [35.3, 0.0], [35.4, 0.0], [35.5, 0.0], [35.6, 0.0], [35.7, 0.0], [35.8, 0.0], [35.9, 0.0], [36.0, 0.0], [36.1, 0.0], [36.2, 0.0], [36.3, 0.0], [36.4, 0.0], [36.5, 0.0], [36.6, 0.0], [36.7, 0.0], [36.8, 0.0], [36.9, 0.0], [37.0, 1.0], [37.1, 1.0], [37.2, 1.0], [37.3, 1.0], [37.4, 1.0], [37.5, 1.0], [37.6, 1.0], [37.7, 1.0], [37.8, 1.0], [37.9, 1.0], [38.0, 1.0], [38.1, 1.0], [38.2, 1.0], [38.3, 1.0], [38.4, 1.0], [38.5, 1.0], [38.6, 1.0], [38.7, 1.0], [38.8, 1.0], [38.9, 1.0], [39.0, 1.0], [39.1, 1.0], [39.2, 1.0], [39.3, 1.0], [39.4, 1.0], [39.5, 1.0], [39.6, 1.0], [39.7, 1.0], [39.8, 1.0], [39.9, 1.0], [40.0, 1.0], [40.1, 1.0], [40.2, 1.0], [40.3, 1.0], [40.4, 1.0], [40.5, 1.0], [40.6, 1.0], [40.7, 1.0], [40.8, 1.0], [40.9, 1.0], [41.0, 1.0], [41.1, 1.0], [41.2, 1.0], [41.3, 1.0], [41.4, 1.0], [41.5, 1.0], [41.6, 1.0], [41.7, 1.0], [41.8, 1.0], [41.9, 1.0], [42.0, 1.0], [42.1, 1.0], [42.2, 1.0], [42.3, 1.0], [42.4, 1.0], [42.5, 1.0], [42.6, 1.0], [42.7, 1.0], [42.8, 1.0], [42.9, 1.0], [43.0, 1.0], [43.1, 1.0], [43.2, 1.0], [43.3, 1.0], [43.4, 1.0], [43.5, 1.0], [43.6, 1.0], [43.7, 1.0], [43.8, 1.0], [43.9, 1.0], [44.0, 1.0], [44.1, 1.0], [44.2, 1.0], [44.3, 1.0], [44.4, 1.0], [44.5, 1.0], [44.6, 1.0], [44.7, 1.0], [44.8, 1.0], [44.9, 1.0], [45.0, 1.0], [45.1, 1.0], [45.2, 1.0], [45.3, 1.0], [45.4, 1.0], [45.5, 1.0], [45.6, 1.0], [45.7, 1.0], [45.8, 1.0], [45.9, 1.0], [46.0, 1.0], [46.1, 1.0], [46.2, 1.0], [46.3, 1.0], [46.4, 1.0], [46.5, 1.0], [46.6, 1.0], [46.7, 1.0], [46.8, 1.0], [46.9, 1.0], [47.0, 1.0], [47.1, 1.0], [47.2, 1.0], [47.3, 1.0], [47.4, 1.0], [47.5, 1.0], [47.6, 1.0], [47.7, 1.0], [47.8, 1.0], [47.9, 1.0], [48.0, 1.0], [48.1, 1.0], [48.2, 1.0], [48.3, 1.0], [48.4, 1.0], [48.5, 1.0], [48.6, 1.0], [48.7, 1.0], [48.8, 1.0], [48.9, 1.0], [49.0, 1.0], [49.1, 1.0], [49.2, 1.0], [49.3, 1.0], [49.4, 1.0], [49.5, 1.0], [49.6, 1.0], [49.7, 1.0], [49.8, 1.0], [49.9, 1.0], [50.0, 1.0], [50.1, 1.0], [50.2, 1.0], [50.3, 1.0], [50.4, 1.0], [50.5, 1.0], [50.6, 1.0], [50.7, 1.0], [50.8, 1.0], [50.9, 1.0], [51.0, 1.0], [51.1, 1.0], [51.2, 1.0], [51.3, 1.0], [51.4, 1.0], [51.5, 1.0], [51.6, 1.0], [51.7, 1.0], [51.8, 1.0], [51.9, 1.0], [52.0, 1.0], [52.1, 1.0], [52.2, 1.0], [52.3, 1.0], [52.4, 1.0], [52.5, 1.0], [52.6, 1.0], [52.7, 1.0], [52.8, 1.0], [52.9, 1.0], [53.0, 1.0], [53.1, 1.0], [53.2, 1.0], [53.3, 1.0], [53.4, 1.0], [53.5, 1.0], [53.6, 1.0], [53.7, 1.0], [53.8, 1.0], [53.9, 1.0], [54.0, 1.0], [54.1, 1.0], [54.2, 1.0], [54.3, 1.0], [54.4, 1.0], [54.5, 1.0], [54.6, 1.0], [54.7, 1.0], [54.8, 1.0], [54.9, 1.0], [55.0, 1.0], [55.1, 1.0], [55.2, 1.0], [55.3, 1.0], [55.4, 1.0], [55.5, 1.0], [55.6, 1.0], [55.7, 1.0], [55.8, 1.0], [55.9, 1.0], [56.0, 1.0], [56.1, 1.0], [56.2, 1.0], [56.3, 1.0], [56.4, 1.0], [56.5, 1.0], [56.6, 1.0], [56.7, 1.0], [56.8, 1.0], [56.9, 1.0], [57.0, 1.0], [57.1, 1.0], [57.2, 1.0], [57.3, 1.0], [57.4, 1.0], [57.5, 1.0], [57.6, 1.0], [57.7, 1.0], [57.8, 1.0], [57.9, 1.0], [58.0, 1.0], [58.1, 1.0], [58.2, 1.0], [58.3, 1.0], [58.4, 1.0], [58.5, 1.0], [58.6, 1.0], [58.7, 1.0], [58.8, 1.0], [58.9, 1.0], [59.0, 1.0], [59.1, 1.0], [59.2, 1.0], [59.3, 1.0], [59.4, 1.0], [59.5, 1.0], [59.6, 1.0], [59.7, 1.0], [59.8, 1.0], [59.9, 1.0], [60.0, 1.0], [60.1, 1.0], [60.2, 1.0], [60.3, 1.0], [60.4, 1.0], [60.5, 1.0], [60.6, 1.0], [60.7, 1.0], [60.8, 1.0], [60.9, 1.0], [61.0, 1.0], [61.1, 1.0], [61.2, 1.0], [61.3, 1.0], [61.4, 1.0], [61.5, 1.0], [61.6, 1.0], [61.7, 1.0], [61.8, 1.0], [61.9, 1.0], [62.0, 1.0], [62.1, 1.0], [62.2, 1.0], [62.3, 1.0], [62.4, 1.0], [62.5, 1.0], [62.6, 1.0], [62.7, 1.0], [62.8, 1.0], [62.9, 1.0], [63.0, 1.0], [63.1, 1.0], [63.2, 1.0], [63.3, 1.0], [63.4, 1.0], [63.5, 1.0], [63.6, 1.0], [63.7, 1.0], [63.8, 1.0], [63.9, 1.0], [64.0, 1.0], [64.1, 1.0], [64.2, 1.0], [64.3, 1.0], [64.4, 1.0], [64.5, 1.0], [64.6, 1.0], [64.7, 1.0], [64.8, 1.0], [64.9, 1.0], [65.0, 1.0], [65.1, 1.0], [65.2, 1.0], [65.3, 1.0], [65.4, 1.0], [65.5, 1.0], [65.6, 1.0], [65.7, 1.0], [65.8, 1.0], [65.9, 1.0], [66.0, 1.0], [66.1, 1.0], [66.2, 1.0], [66.3, 1.0], [66.4, 1.0], [66.5, 1.0], [66.6, 1.0], [66.7, 1.0], [66.8, 1.0], [66.9, 1.0], [67.0, 1.0], [67.1, 1.0], [67.2, 1.0], [67.3, 1.0], [67.4, 1.0], [67.5, 1.0], [67.6, 1.0], [67.7, 1.0], [67.8, 1.0], [67.9, 1.0], [68.0, 1.0], [68.1, 1.0], [68.2, 1.0], [68.3, 1.0], [68.4, 1.0], [68.5, 1.0], [68.6, 1.0], [68.7, 1.0], [68.8, 1.0], [68.9, 1.0], [69.0, 1.0], [69.1, 1.0], [69.2, 1.0], [69.3, 1.0], [69.4, 1.0], [69.5, 1.0], [69.6, 1.0], [69.7, 1.0], [69.8, 1.0], [69.9, 1.0], [70.0, 1.0], [70.1, 1.0], [70.2, 1.0], [70.3, 1.0], [70.4, 1.0], [70.5, 1.0], [70.6, 1.0], [70.7, 1.0], [70.8, 1.0], [70.9, 1.0], [71.0, 1.0], [71.1, 1.0], [71.2, 1.0], [71.3, 1.0], [71.4, 1.0], [71.5, 1.0], [71.6, 1.0], [71.7, 1.0], [71.8, 1.0], [71.9, 1.0], [72.0, 1.0], [72.1, 1.0], [72.2, 1.0], [72.3, 1.0], [72.4, 1.0], [72.5, 1.0], [72.6, 1.0], [72.7, 1.0], [72.8, 1.0], [72.9, 1.0], [73.0, 1.0], [73.1, 1.0], [73.2, 1.0], [73.3, 1.0], [73.4, 1.0], [73.5, 1.0], [73.6, 1.0], [73.7, 1.0], [73.8, 1.0], [73.9, 1.0], [74.0, 1.0], [74.1, 1.0], [74.2, 1.0], [74.3, 1.0], [74.4, 1.0], [74.5, 1.0], [74.6, 1.0], [74.7, 1.0], [74.8, 1.0], [74.9, 1.0], [75.0, 1.0], [75.1, 1.0], [75.2, 1.0], [75.3, 1.0], [75.4, 1.0], [75.5, 1.0], [75.6, 1.0], [75.7, 1.0], [75.8, 1.0], [75.9, 1.0], [76.0, 1.0], [76.1, 1.0], [76.2, 1.0], [76.3, 1.0], [76.4, 1.0], [76.5, 1.0], [76.6, 1.0], [76.7, 1.0], [76.8, 1.0], [76.9, 1.0], [77.0, 1.0], [77.1, 1.0], [77.2, 1.0], [77.3, 1.0], [77.4, 1.0], [77.5, 1.0], [77.6, 1.0], [77.7, 1.0], [77.8, 1.0], [77.9, 1.0], [78.0, 1.0], [78.1, 1.0], [78.2, 1.0], [78.3, 1.0], [78.4, 1.0], [78.5, 1.0], [78.6, 1.0], [78.7, 1.0], [78.8, 1.0], [78.9, 1.0], [79.0, 1.0], [79.1, 1.0], [79.2, 1.0], [79.3, 1.0], [79.4, 1.0], [79.5, 1.0], [79.6, 1.0], [79.7, 1.0], [79.8, 1.0], [79.9, 1.0], [80.0, 1.0], [80.1, 1.0], [80.2, 1.0], [80.3, 1.0], [80.4, 1.0], [80.5, 1.0], [80.6, 1.0], [80.7, 1.0], [80.8, 1.0], [80.9, 1.0], [81.0, 1.0], [81.1, 1.0], [81.2, 1.0], [81.3, 1.0], [81.4, 1.0], [81.5, 1.0], [81.6, 1.0], [81.7, 1.0], [81.8, 1.0], [81.9, 1.0], [82.0, 1.0], [82.1, 1.0], [82.2, 1.0], [82.3, 1.0], [82.4, 1.0], [82.5, 1.0], [82.6, 1.0], [82.7, 1.0], [82.8, 1.0], [82.9, 1.0], [83.0, 1.0], [83.1, 1.0], [83.2, 1.0], [83.3, 1.0], [83.4, 1.0], [83.5, 1.0], [83.6, 1.0], [83.7, 1.0], [83.8, 1.0], [83.9, 1.0], [84.0, 1.0], [84.1, 1.0], [84.2, 1.0], [84.3, 1.0], [84.4, 1.0], [84.5, 1.0], [84.6, 1.0], [84.7, 1.0], [84.8, 1.0], [84.9, 1.0], [85.0, 1.0], [85.1, 1.0], [85.2, 1.0], [85.3, 1.0], [85.4, 1.0], [85.5, 1.0], [85.6, 1.0], [85.7, 1.0], [85.8, 1.0], [85.9, 1.0], [86.0, 1.0], [86.1, 1.0], [86.2, 1.0], [86.3, 1.0], [86.4, 1.0], [86.5, 1.0], [86.6, 1.0], [86.7, 1.0], [86.8, 1.0], [86.9, 1.0], [87.0, 1.0], [87.1, 1.0], [87.2, 1.0], [87.3, 1.0], [87.4, 1.0], [87.5, 1.0], [87.6, 1.0], [87.7, 1.0], [87.8, 1.0], [87.9, 1.0], [88.0, 1.0], [88.1, 1.0], [88.2, 1.0], [88.3, 1.0], [88.4, 1.0], [88.5, 1.0], [88.6, 1.0], [88.7, 1.0], [88.8, 1.0], [88.9, 1.0], [89.0, 1.0], [89.1, 1.0], [89.2, 1.0], [89.3, 1.0], [89.4, 1.0], [89.5, 1.0], [89.6, 1.0], [89.7, 1.0], [89.8, 1.0], [89.9, 1.0], [90.0, 1.0], [90.1, 1.0], [90.2, 1.0], [90.3, 1.0], [90.4, 1.0], [90.5, 1.0], [90.6, 1.0], [90.7, 1.0], [90.8, 1.0], [90.9, 1.0], [91.0, 1.0], [91.1, 1.0], [91.2, 1.0], [91.3, 1.0], [91.4, 1.0], [91.5, 1.0], [91.6, 1.0], [91.7, 1.0], [91.8, 1.0], [91.9, 1.0], [92.0, 1.0], [92.1, 1.0], [92.2, 1.0], [92.3, 1.0], [92.4, 1.0], [92.5, 1.0], [92.6, 1.0], [92.7, 1.0], [92.8, 1.0], [92.9, 1.0], [93.0, 1.0], [93.1, 1.0], [93.2, 1.0], [93.3, 1.0], [93.4, 1.0], [93.5, 1.0], [93.6, 1.0], [93.7, 1.0], [93.8, 1.0], [93.9, 1.0], [94.0, 1.0], [94.1, 1.0], [94.2, 1.0], [94.3, 1.0], [94.4, 1.0], [94.5, 1.0], [94.6, 1.0], [94.7, 1.0], [94.8, 1.0], [94.9, 1.0], [95.0, 1.0], [95.1, 1.0], [95.2, 1.0], [95.3, 1.0], [95.4, 1.0], [95.5, 1.0], [95.6, 1.0], [95.7, 1.0], [95.8, 1.0], [95.9, 1.0], [96.0, 1.0], [96.1, 1.0], [96.2, 1.0], [96.3, 1.0], [96.4, 1.0], [96.5, 1.0], [96.6, 1.0], [96.7, 1.0], [96.8, 1.0], [96.9, 1.0], [97.0, 1.0], [97.1, 1.0], [97.2, 1.0], [97.3, 1.0], [97.4, 1.0], [97.5, 1.0], [97.6, 1.0], [97.7, 1.0], [97.8, 1.0], [97.9, 1.0], [98.0, 1.0], [98.1, 1.0], [98.2, 1.0], [98.3, 1.0], [98.4, 1.0], [98.5, 1.0], [98.6, 1.0], [98.7, 1.0], [98.8, 1.0], [98.9, 1.0], [99.0, 1.0], [99.1, 1.0], [99.2, 1.0], [99.3, 1.0], [99.4, 1.0], [99.5, 1.0], [99.6, 1.0], [99.7, 1.0], [99.8, 1.0], [99.9, 2.0]], "isOverall": false, "label": "api\/block\u65B0\u63A5\u53E3", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 100.0, "title": "Response Time Percentiles"}},
        getOptions: function() {
            return {
                series: {
                    points: { show: false }
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentiles'
                },
                xaxis: {
                    tickDecimals: 1,
                    axisLabel: "Percentiles",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Percentile value in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : %x.2 percentile was %y ms"
                },
                selection: { mode: "xy" },
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentiles"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesPercentiles"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesPercentiles"), dataset, prepareOverviewOptions(options));
        }
};

/**
 * @param elementId Id of element where we display message
 */
function setEmptyGraph(elementId) {
    $(function() {
        $(elementId).text("No graph series with filter="+seriesFilter);
    });
}

// Response times percentiles
function refreshResponseTimePercentiles() {
    var infos = responseTimePercentilesInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimePercentiles");
        return;
    }
    if (isGraph($("#flotResponseTimesPercentiles"))){
        infos.createGraph();
    } else {
        var choiceContainer = $("#choicesResponseTimePercentiles");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesPercentiles", "#overviewResponseTimesPercentiles");
        $('#bodyResponseTimePercentiles .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimeDistributionInfos = {
        data: {"result": {"minY": 1.0, "minX": 0.0, "maxY": 10000.0, "series": [{"data": [[0.0, 10000.0]], "isOverall": false, "label": "api\/block\u65B0\u63A5\u53E3\u4E0D\u5E26\u53C2\u6570", "isController": false}, {"data": [[0.0, 9430.0], [300.0, 22.0], [600.0, 1.0], [700.0, 2.0], [100.0, 464.0], [200.0, 65.0], [400.0, 9.0], [500.0, 7.0]], "isOverall": false, "label": "api\/block\u8001\u63A5\u53E3", "isController": false}, {"data": [[1100.0, 11.0], [600.0, 1543.0], [1200.0, 7.0], [1300.0, 2.0], [700.0, 602.0], [1400.0, 1.0], [1500.0, 1.0], [800.0, 274.0], [900.0, 154.0], [500.0, 7342.0], [1000.0, 63.0]], "isOverall": false, "label": "api\/block\u8001\u63A5\u53E3\u4E0D\u5E26\u53C2\u6570", "isController": false}, {"data": [[0.0, 10000.0]], "isOverall": false, "label": "api\/block\u65B0\u63A5\u53E3", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 100, "maxX": 1500.0, "title": "Response Time Distribution"}},
        getOptions: function() {
            var granularity = this.data.result.granularity;
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    barWidth: this.data.result.granularity
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " responses for " + label + " were between " + xval + " and " + (xval + granularity) + " ms";
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimeDistribution"), prepareData(data.result.series, $("#choicesResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshResponseTimeDistribution() {
    var infos = responseTimeDistributionInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeDistribution");
        return;
    }
    if (isGraph($("#flotResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var syntheticResponseTimeDistributionInfos = {
        data: {"result": {"minY": 1.0, "minX": 0.0, "ticks": [[0, "Requests having \nresponse time <= 500ms"], [1, "Requests having \nresponse time > 500ms and <= 1,500ms"], [2, "Requests having \nresponse time > 1,500ms"], [3, "Requests in error"]], "maxY": 20000.0, "series": [{"data": [[0.0, 9990.0]], "color": "#9ACD32", "isOverall": false, "label": "Requests having \nresponse time <= 500ms", "isController": false}, {"data": [[1.0, 10009.0]], "color": "yellow", "isOverall": false, "label": "Requests having \nresponse time > 500ms and <= 1,500ms", "isController": false}, {"data": [[2.0, 1.0]], "color": "orange", "isOverall": false, "label": "Requests having \nresponse time > 1,500ms", "isController": false}, {"data": [[3.0, 20000.0]], "color": "#FF6347", "isOverall": false, "label": "Requests in error", "isController": false}], "supportsControllersDiscrimination": false, "maxX": 3.0, "title": "Synthetic Response Times Distribution"}},
        getOptions: function() {
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendSyntheticResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times ranges",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                    tickLength:0,
                    min:-0.5,
                    max:3.5
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    align: "center",
                    barWidth: 0.25,
                    fill:.75
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " " + label;
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            options.xaxis.ticks = data.result.ticks;
            $.plot($("#flotSyntheticResponseTimeDistribution"), prepareData(data.result.series, $("#choicesSyntheticResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshSyntheticResponseTimeDistribution() {
    var infos = syntheticResponseTimeDistributionInfos;
    prepareSeries(infos.data, true);
    if (isGraph($("#flotSyntheticResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerSyntheticResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var activeThreadsOverTimeInfos = {
        data: {"result": {"minY": 4.506493506493508, "minX": 1.57466928E12, "maxY": 5.0, "series": [{"data": [[1.57466988E12, 5.0], [1.57466958E12, 5.0], [1.57467054E12, 5.0], [1.57467048E12, 5.0], [1.57467018E12, 5.0], [1.57466952E12, 5.0], [1.57467012E12, 5.0], [1.57466982E12, 5.0], [1.57466976E12, 5.0], [1.57466946E12, 5.0], [1.57467042E12, 5.0], [1.57467036E12, 5.0], [1.57467006E12, 5.0], [1.5746694E12, 5.0], [1.57467E12, 5.0], [1.5746697E12, 5.0], [1.5746706E12, 4.506493506493508], [1.57466934E12, 5.0], [1.5746703E12, 5.0], [1.57466964E12, 5.0], [1.57467024E12, 5.0], [1.57466994E12, 5.0], [1.57466928E12, 4.995535714285717]], "isOverall": false, "label": "\u5DF2\u4E0A\u7EBF\u63A5\u53E3", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.5746706E12, "title": "Active Threads Over Time"}},
        getOptions: function() {
            return {
                series: {
                    stack: true,
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 6,
                    show: true,
                    container: '#legendActiveThreadsOverTime'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                selection: {
                    mode: 'xy'
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : At %x there were %y active threads"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesActiveThreadsOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotActiveThreadsOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewActiveThreadsOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Active Threads Over Time
function refreshActiveThreadsOverTime(fixTimestamps) {
    var infos = activeThreadsOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 28800000);
    }
    if(isGraph($("#flotActiveThreadsOverTime"))) {
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesActiveThreadsOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotActiveThreadsOverTime", "#overviewActiveThreadsOverTime");
        $('#footerActiveThreadsOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var timeVsThreadsInfos = {
        data: {"result": {"minY": 0.0, "minX": 1.0, "maxY": 724.3750000000001, "series": [{"data": [[4.0, 0.7222222222222223], [2.0, 0.5], [1.0, 1.0], [5.0, 0.6572260721100728], [3.0, 0.8125]], "isOverall": false, "label": "api\/block\u65B0\u63A5\u53E3\u4E0D\u5E26\u53C2\u6570", "isController": false}, {"data": [[4.9922, 0.6575000000000014]], "isOverall": false, "label": "api\/block\u65B0\u63A5\u53E3\u4E0D\u5E26\u53C2\u6570-Aggregated", "isController": false}, {"data": [[4.0, 75.94117647058823], [2.0, 139.37500000000003], [1.0, 70.0], [5.0, 65.24643502711382], [3.0, 159.06249999999994]], "isOverall": false, "label": "api\/block\u8001\u63A5\u53E3", "isController": false}, {"data": [[4.9922999999999655, 65.47449999999961]], "isOverall": false, "label": "api\/block\u8001\u63A5\u53E3-Aggregated", "isController": false}, {"data": [[4.0, 609.7777777777778], [2.0, 587.75], [1.0, 522.0], [5.0, 596.1348799839316], [3.0, 724.3750000000001]], "isOverall": false, "label": "api\/block\u8001\u63A5\u53E3\u4E0D\u5E26\u53C2\u6570", "isController": false}, {"data": [[4.9922, 596.3504999999982]], "isOverall": false, "label": "api\/block\u8001\u63A5\u53E3\u4E0D\u5E26\u53C2\u6570-Aggregated", "isController": false}, {"data": [[4.0, 0.6470588235294118], [2.0, 0.625], [1.0, 0.0], [5.0, 0.6325567383008603], [3.0, 0.6875]], "isOverall": false, "label": "api\/block\u65B0\u63A5\u53E3", "isController": false}, {"data": [[4.9922999999999655, 0.6325999999999963]], "isOverall": false, "label": "api\/block\u65B0\u63A5\u53E3-Aggregated", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 5.0, "title": "Time VS Threads"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: { noColumns: 2,show: true, container: '#legendTimeVsThreads' },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s: At %x.2 active threads, Average response time was %y.2 ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesTimeVsThreads"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotTimesVsThreads"), dataset, options);
            // setup overview
            $.plot($("#overviewTimesVsThreads"), dataset, prepareOverviewOptions(options));
        }
};

// Time vs threads
function refreshTimeVsThreads(){
    var infos = timeVsThreadsInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTimeVsThreads");
        return;
    }
    if(isGraph($("#flotTimesVsThreads"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTimeVsThreads");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTimesVsThreads", "#overviewTimesVsThreads");
        $('#footerTimeVsThreads .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var bytesThroughputOverTimeInfos = {
        data : {"result": {"minY": 721.6333333333333, "minX": 1.57466928E12, "maxY": 78458.28333333334, "series": [{"data": [[1.57466988E12, 76791.0], [1.57466958E12, 78366.65], [1.57467054E12, 78306.01666666666], [1.57467048E12, 77130.2], [1.57467018E12, 77009.76666666666], [1.57466952E12, 77656.7], [1.57467012E12, 77078.66666666667], [1.57466982E12, 76972.85], [1.57466976E12, 76649.65], [1.57466946E12, 78115.96666666666], [1.57467042E12, 78458.28333333334], [1.57467036E12, 76402.08333333333], [1.57467006E12, 75648.16666666667], [1.5746694E12, 73525.9], [1.57467E12, 72501.16666666667], [1.5746697E12, 68720.56666666667], [1.5746706E12, 25985.8], [1.57466934E12, 76305.46666666666], [1.5746703E12, 76208.85], [1.57466964E12, 77592.98333333334], [1.57467024E12, 78270.31666666667], [1.57466994E12, 77268.11666666667], [1.57466928E12, 56683.933333333334]], "isOverall": false, "label": "Bytes received per second", "isController": false}, {"data": [[1.57466988E12, 2129.883333333333], [1.57466958E12, 2177.116666666667], [1.57467054E12, 2174.4666666666667], [1.57467048E12, 2142.3333333333335], [1.57467018E12, 2139.483333333333], [1.57466952E12, 2155.8166666666666], [1.57467012E12, 2139.15], [1.57466982E12, 2136.9166666666665], [1.57466976E12, 2127.483333333333], [1.57466946E12, 2169.8333333333335], [1.57467042E12, 2179.766666666667], [1.57467036E12, 2123.766666666667], [1.57467006E12, 2102.0], [1.5746694E12, 2043.5833333333333], [1.57467E12, 2012.7833333333333], [1.5746697E12, 1907.65], [1.5746706E12, 721.6333333333333], [1.57466934E12, 2115.7833333333333], [1.5746703E12, 2115.8166666666666], [1.57466964E12, 2156.0], [1.57467024E12, 2172.2166666666667], [1.57466994E12, 2149.0], [1.57466928E12, 1574.7]], "isOverall": false, "label": "Bytes sent per second", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.5746706E12, "title": "Bytes Throughput Over Time"}},
        getOptions : function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity) ,
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Bytes / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendBytesThroughputOverTime'
                },
                selection: {
                    mode: "xy"
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y"
                }
            };
        },
        createGraph : function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesBytesThroughputOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotBytesThroughputOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewBytesThroughputOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Bytes throughput Over Time
function refreshBytesThroughputOverTime(fixTimestamps) {
    var infos = bytesThroughputOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 28800000);
    }
    if(isGraph($("#flotBytesThroughputOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesBytesThroughputOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotBytesThroughputOverTime", "#overviewBytesThroughputOverTime");
        $('#footerBytesThroughputOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimesOverTimeInfos = {
        data: {"result": {"minY": 0.5641025641025643, "minX": 1.57466928E12, "maxY": 665.8051948051946, "series": [{"data": [[1.57466988E12, 0.6206140350877192], [1.57466958E12, 0.6896551724137929], [1.57467054E12, 0.6465517241379312], [1.57467048E12, 0.6214442013129102], [1.57467018E12, 0.6293859649122819], [1.57466952E12, 0.6847826086956521], [1.57467012E12, 0.6301969365426698], [1.57466982E12, 0.6776315789473681], [1.57466976E12, 0.6321585903083707], [1.57466946E12, 0.7019438444924406], [1.57467042E12, 0.6301075268817204], [1.57467036E12, 0.6238938053097347], [1.57467006E12, 0.6093749999999998], [1.5746694E12, 0.7172413793103439], [1.57467E12, 0.6116279069767444], [1.5746697E12, 0.6511056511056508], [1.5746706E12, 0.6493506493506496], [1.57466934E12, 0.713024282560707], [1.5746703E12, 0.6261061946902652], [1.57466964E12, 0.665217391304348], [1.57467024E12, 0.6271551724137923], [1.57466994E12, 0.6630196936542669], [1.57466928E12, 0.842261904761905]], "isOverall": false, "label": "api\/block\u65B0\u63A5\u53E3\u4E0D\u5E26\u53C2\u6570", "isController": false}, {"data": [[1.57466988E12, 67.19867549668872], [1.57466958E12, 59.29032258064516], [1.57467054E12, 59.03017241379309], [1.57467048E12, 58.71334792122538], [1.57467018E12, 59.45295404814], [1.57466952E12, 61.8565217391304], [1.57467012E12, 60.00219298245615], [1.57466982E12, 60.182017543859665], [1.57466976E12, 64.98678414096909], [1.57466946E12, 60.60475161987041], [1.57467042E12, 59.266666666666644], [1.57467036E12, 58.85903083700438], [1.57467006E12, 67.29398663697097], [1.5746694E12, 80.47597254004575], [1.57467E12, 86.02564102564105], [1.5746697E12, 104.2604422604423], [1.5746706E12, 103.05844155844153], [1.57466934E12, 61.0311111111111], [1.5746703E12, 63.73835920177363], [1.57466964E12, 60.00434782608695], [1.57467024E12, 59.62850971922248], [1.57466994E12, 60.31304347826082], [1.57466928E12, 60.958333333333364]], "isOverall": false, "label": "api\/block\u8001\u63A5\u53E3", "isController": false}, {"data": [[1.57466988E12, 594.274122807017], [1.57466958E12, 587.717672413793], [1.57467054E12, 587.7112068965517], [1.57467048E12, 593.8840262582058], [1.57467018E12, 596.6864035087722], [1.57466952E12, 585.4043478260878], [1.57467012E12, 594.7702407002186], [1.57466982E12, 593.3881578947371], [1.57466976E12, 593.3502202643172], [1.57466946E12, 586.3412526997841], [1.57467042E12, 585.5397849462364], [1.57467036E12, 603.5530973451332], [1.57467006E12, 599.4174107142857], [1.5746694E12, 606.0942528735637], [1.57467E12, 610.9837209302325], [1.5746697E12, 629.756756756757], [1.5746706E12, 665.8051948051946], [1.57466934E12, 599.8388520971304], [1.5746703E12, 597.7433628318583], [1.57466964E12, 591.6260869565211], [1.57467024E12, 585.7025862068966], [1.57466994E12, 591.8358862144419], [1.57466928E12, 583.1994047619047]], "isOverall": false, "label": "api\/block\u8001\u63A5\u53E3\u4E0D\u5E26\u53C2\u6570", "isController": false}, {"data": [[1.57466988E12, 0.6026490066225165], [1.57466958E12, 0.638709677419355], [1.57467054E12, 0.6142241379310347], [1.57467048E12, 0.6017505470459519], [1.57467018E12, 0.6105032822757108], [1.57466952E12, 0.6608695652173916], [1.57467012E12, 0.6315789473684208], [1.57466982E12, 0.6228070175438596], [1.57466976E12, 0.6145374449339209], [1.57466946E12, 0.7041036717062629], [1.57467042E12, 0.597849462365592], [1.57467036E12, 0.6101321585903081], [1.57467006E12, 0.6547884187082396], [1.5746694E12, 0.6819221967963395], [1.57467E12, 0.5641025641025643], [1.5746697E12, 0.6225490196078426], [1.5746706E12, 0.5649350649350648], [1.57466934E12, 0.7022222222222224], [1.5746703E12, 0.6452328159645231], [1.57466964E12, 0.6318082788671026], [1.57467024E12, 0.6069114470842333], [1.57466994E12, 0.6043478260869564], [1.57466928E12, 0.74404761904762]], "isOverall": false, "label": "api\/block\u65B0\u63A5\u53E3", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.5746706E12, "title": "Response Time Over Time"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average response time was %y ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Times Over Time
function refreshResponseTimeOverTime(fixTimestamps) {
    var infos = responseTimesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 28800000);
    }
    if(isGraph($("#flotResponseTimesOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesOverTime", "#overviewResponseTimesOverTime");
        $('#footerResponseTimesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var latenciesOverTimeInfos = {
        data: {"result": {"minY": 0.0, "minX": 1.57466928E12, "maxY": 665.8051948051946, "series": [{"data": [[1.57466988E12, 0.0], [1.57466958E12, 0.0], [1.57467054E12, 0.0], [1.57467048E12, 0.0], [1.57467018E12, 0.0], [1.57466952E12, 0.0], [1.57467012E12, 0.0], [1.57466982E12, 0.0], [1.57466976E12, 0.0], [1.57466946E12, 0.0], [1.57467042E12, 0.0], [1.57467036E12, 0.0], [1.57467006E12, 0.0], [1.5746694E12, 0.0], [1.57467E12, 0.0], [1.5746697E12, 0.0], [1.5746706E12, 0.0], [1.57466934E12, 0.0], [1.5746703E12, 0.0], [1.57466964E12, 0.0], [1.57467024E12, 0.0], [1.57466994E12, 0.0], [1.57466928E12, 0.0]], "isOverall": false, "label": "api\/block\u65B0\u63A5\u53E3\u4E0D\u5E26\u53C2\u6570", "isController": false}, {"data": [[1.57466988E12, 67.19867549668872], [1.57466958E12, 59.28817204301078], [1.57467054E12, 59.023706896551744], [1.57467048E12, 58.71334792122538], [1.57467018E12, 59.44857768052517], [1.57466952E12, 61.84999999999998], [1.57467012E12, 59.99780701754386], [1.57466982E12, 60.17982456140351], [1.57466976E12, 64.98017621145374], [1.57466946E12, 60.600431965442745], [1.57467042E12, 59.26236559139786], [1.57467036E12, 58.85682819383263], [1.57467006E12, 67.28730512249449], [1.5746694E12, 80.46910755148743], [1.57467E12, 86.02097902097898], [1.5746697E12, 104.2604422604423], [1.5746706E12, 103.05844155844153], [1.57466934E12, 61.02222222222219], [1.5746703E12, 63.73835920177363], [1.57466964E12, 60.00434782608695], [1.57467024E12, 59.626349892008676], [1.57466994E12, 60.30652173913043], [1.57466928E12, 60.9404761904762]], "isOverall": false, "label": "api\/block\u8001\u63A5\u53E3", "isController": false}, {"data": [[1.57466988E12, 594.2719298245612], [1.57466958E12, 587.7068965517242], [1.57467054E12, 587.7090517241378], [1.57467048E12, 593.8774617067836], [1.57467018E12, 596.6820175438595], [1.57466952E12, 585.3978260869562], [1.57467012E12, 594.7658643326039], [1.57466982E12, 593.3837719298243], [1.57466976E12, 593.3436123348014], [1.57466946E12, 586.3304535637145], [1.57467042E12, 585.5311827956997], [1.57467036E12, 603.5508849557524], [1.57467006E12, 599.4062499999999], [1.5746694E12, 606.0873563218394], [1.57467E12, 610.9720930232559], [1.5746697E12, 629.7420147420137], [1.5746706E12, 665.8051948051946], [1.57466934E12, 599.8123620309043], [1.5746703E12, 597.7367256637165], [1.57466964E12, 591.6239130434786], [1.57467024E12, 585.6982758620693], [1.57466994E12, 591.8271334792121], [1.57466928E12, 583.1755952380947]], "isOverall": false, "label": "api\/block\u8001\u63A5\u53E3\u4E0D\u5E26\u53C2\u6570", "isController": false}, {"data": [[1.57466988E12, 0.0], [1.57466958E12, 0.0], [1.57467054E12, 0.0], [1.57467048E12, 0.0], [1.57467018E12, 0.0], [1.57466952E12, 0.0], [1.57467012E12, 0.0], [1.57466982E12, 0.0], [1.57466976E12, 0.0], [1.57466946E12, 0.0], [1.57467042E12, 0.0], [1.57467036E12, 0.0], [1.57467006E12, 0.0], [1.5746694E12, 0.0], [1.57467E12, 0.0], [1.5746697E12, 0.0], [1.5746706E12, 0.0], [1.57466934E12, 0.0], [1.5746703E12, 0.0], [1.57466964E12, 0.0], [1.57467024E12, 0.0], [1.57466994E12, 0.0], [1.57466928E12, 0.0]], "isOverall": false, "label": "api\/block\u65B0\u63A5\u53E3", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.5746706E12, "title": "Latencies Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response latencies in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendLatenciesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average latency was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesLatenciesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotLatenciesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewLatenciesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Latencies Over Time
function refreshLatenciesOverTime(fixTimestamps) {
    var infos = latenciesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyLatenciesOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 28800000);
    }
    if(isGraph($("#flotLatenciesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesLatenciesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotLatenciesOverTime", "#overviewLatenciesOverTime");
        $('#footerLatenciesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var connectTimeOverTimeInfos = {
        data: {"result": {"minY": 0.24568965517241378, "minX": 1.57466928E12, "maxY": 3.1948051948051965, "series": [{"data": [[1.57466988E12, 0.6030701754385966], [1.57466958E12, 0.6767241379310346], [1.57467054E12, 0.6379310344827588], [1.57467048E12, 0.612691466083151], [1.57467018E12, 0.6206140350877195], [1.57466952E12, 0.6630434782608701], [1.57467012E12, 0.6083150984682713], [1.57466982E12, 0.6578947368421051], [1.57466976E12, 0.6189427312775321], [1.57466946E12, 0.6846652267818578], [1.57467042E12, 0.6193548387096766], [1.57467036E12, 0.6084070796460177], [1.57467006E12, 0.6026785714285715], [1.5746694E12, 0.6988505747126444], [1.57467E12, 0.5999999999999998], [1.5746697E12, 0.6388206388206391], [1.5746706E12, 0.6298701298701299], [1.57466934E12, 0.7064017660044146], [1.5746703E12, 0.6106194690265482], [1.57466964E12, 0.639130434782609], [1.57467024E12, 0.6142241379310345], [1.57466994E12, 0.6564551422319478], [1.57466928E12, 0.8154761904761906]], "isOverall": false, "label": "api\/block\u65B0\u63A5\u53E3\u4E0D\u5E26\u53C2\u6570", "isController": false}, {"data": [[1.57466988E12, 2.9426048565121405], [1.57466958E12, 2.7569892473118283], [1.57467054E12, 2.909482758620692], [1.57467048E12, 2.822757111597376], [1.57467018E12, 2.717724288840263], [1.57466952E12, 2.7043478260869573], [1.57467012E12, 2.835526315789474], [1.57466982E12, 2.780701754385964], [1.57466976E12, 2.8325991189427326], [1.57466946E12, 2.7170626349891993], [1.57467042E12, 2.9096774193548387], [1.57467036E12, 2.980176211453743], [1.57467006E12, 2.9554565701559024], [1.5746694E12, 2.8993135011441655], [1.57467E12, 3.018648018648019], [1.5746697E12, 2.7764127764127746], [1.5746706E12, 3.1948051948051965], [1.57466934E12, 2.888888888888888], [1.5746703E12, 2.8314855875831495], [1.57466964E12, 2.8347826086956545], [1.57467024E12, 2.764578833693304], [1.57466994E12, 2.8521739130434773], [1.57466928E12, 2.8749999999999987]], "isOverall": false, "label": "api\/block\u8001\u63A5\u53E3", "isController": false}, {"data": [[1.57466988E12, 0.3991228070175438], [1.57466958E12, 0.40086206896551674], [1.57467054E12, 0.24568965517241378], [1.57467048E12, 0.34792122538293213], [1.57467018E12, 0.5789473684210528], [1.57466952E12, 0.49565217391304317], [1.57467012E12, 0.35010940919037215], [1.57466982E12, 0.324561403508772], [1.57466976E12, 0.46255506607929475], [1.57466946E12, 0.4427645788336935], [1.57467042E12, 0.29677419354838735], [1.57467036E12, 0.25221238938053103], [1.57467006E12, 0.4129464285714281], [1.5746694E12, 0.5517241379310344], [1.57467E12, 0.5255813953488369], [1.5746697E12, 0.9041769041769046], [1.5746706E12, 0.6753246753246757], [1.57466934E12, 0.38410596026490046], [1.5746703E12, 0.3849557522123891], [1.57466964E12, 0.33043478260869574], [1.57467024E12, 0.39655172413793127], [1.57466994E12, 0.32822757111597384], [1.57466928E12, 0.48511904761904745]], "isOverall": false, "label": "api\/block\u8001\u63A5\u53E3\u4E0D\u5E26\u53C2\u6570", "isController": false}, {"data": [[1.57466988E12, 0.5982339955849889], [1.57466958E12, 0.6236559139784942], [1.57467054E12, 0.6034482758620692], [1.57467048E12, 0.5995623632385124], [1.57467018E12, 0.5995623632385128], [1.57466952E12, 0.6434782608695648], [1.57467012E12, 0.6184210526315791], [1.57466982E12, 0.611842105263158], [1.57466976E12, 0.6013215859030836], [1.57466946E12, 0.6781857451403882], [1.57467042E12, 0.5935483870967738], [1.57467036E12, 0.6035242290748897], [1.57467006E12, 0.650334075723831], [1.5746694E12, 0.6636155606407325], [1.57467E12, 0.5571095571095571], [1.5746697E12, 0.6029411764705879], [1.5746706E12, 0.5584415584415583], [1.57466934E12, 0.6777777777777774], [1.5746703E12, 0.6363636363636361], [1.57466964E12, 0.6143790849673201], [1.57467024E12, 0.600431965442765], [1.57466994E12, 0.6021739130434788], [1.57466928E12, 0.693452380952381]], "isOverall": false, "label": "api\/block\u65B0\u63A5\u53E3", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.5746706E12, "title": "Connect Time Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getConnectTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average Connect Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendConnectTimeOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average connect time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesConnectTimeOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotConnectTimeOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewConnectTimeOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Connect Time Over Time
function refreshConnectTimeOverTime(fixTimestamps) {
    var infos = connectTimeOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyConnectTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 28800000);
    }
    if(isGraph($("#flotConnectTimeOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesConnectTimeOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotConnectTimeOverTime", "#overviewConnectTimeOverTime");
        $('#footerConnectTimeOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var responseTimePercentilesOverTimeInfos = {
        data: {"result": {"minY": 48.0, "minX": 1.57466928E12, "maxY": 1577.0, "series": [{"data": [[1.57466988E12, 1099.0], [1.57466958E12, 1314.0], [1.57467054E12, 1021.0], [1.57467048E12, 993.0], [1.57467018E12, 999.0], [1.57466952E12, 998.0], [1.57467012E12, 1053.0], [1.57466982E12, 1041.0], [1.57466976E12, 1334.0], [1.57466946E12, 1010.0], [1.57467042E12, 1111.0], [1.57467036E12, 1072.0], [1.57467006E12, 1101.0], [1.5746694E12, 1265.0], [1.57467E12, 1024.0], [1.5746697E12, 1234.0], [1.5746706E12, 1577.0], [1.57466934E12, 1106.0], [1.5746703E12, 1203.0], [1.57466964E12, 1001.0], [1.57467024E12, 1105.0], [1.57466994E12, 1158.0], [1.57466928E12, 1036.0]], "isOverall": false, "label": "Max", "isController": false}, {"data": [[1.57466988E12, 48.0], [1.57466958E12, 48.0], [1.57467054E12, 49.0], [1.57467048E12, 48.0], [1.57467018E12, 48.0], [1.57466952E12, 48.0], [1.57467012E12, 49.0], [1.57466982E12, 48.0], [1.57466976E12, 48.0], [1.57466946E12, 48.0], [1.57467042E12, 48.0], [1.57467036E12, 48.0], [1.57467006E12, 49.0], [1.5746694E12, 49.0], [1.57467E12, 48.0], [1.5746697E12, 48.0], [1.5746706E12, 48.0], [1.57466934E12, 49.0], [1.5746703E12, 48.0], [1.57466964E12, 48.0], [1.57467024E12, 48.0], [1.57466994E12, 49.0], [1.57466928E12, 49.0]], "isOverall": false, "label": "Min", "isController": false}, {"data": [[1.57466988E12, 626.0], [1.57466958E12, 604.0], [1.57467054E12, 608.1], [1.57467048E12, 633.0], [1.57467018E12, 637.6], [1.57466952E12, 611.0], [1.57467012E12, 618.6], [1.57466982E12, 617.4000000000001], [1.57466976E12, 624.0], [1.57466946E12, 605.3000000000001], [1.57467042E12, 612.9], [1.57467036E12, 641.9000000000002], [1.57467006E12, 639.0], [1.5746694E12, 653.7], [1.57467E12, 669.0], [1.5746697E12, 690.5], [1.5746706E12, 747.3000000000001], [1.57466934E12, 631.6], [1.5746703E12, 618.6], [1.57466964E12, 607.0], [1.57467024E12, 614.0], [1.57466994E12, 605.6000000000001], [1.57466928E12, 601.7]], "isOverall": false, "label": "90th percentile", "isController": false}, {"data": [[1.57466988E12, 911.0999999999991], [1.57466958E12, 907.2000000000025], [1.57467054E12, 869.71], [1.57467048E12, 911.2500000000001], [1.57467018E12, 883.0400000000002], [1.57466952E12, 829.1599999999999], [1.57467012E12, 965.7400000000001], [1.57466982E12, 943.61], [1.57466976E12, 838.1899999999997], [1.57466946E12, 877.5700000000002], [1.57467042E12, 828.1399999999996], [1.57467036E12, 965.93], [1.57467006E12, 896.02], [1.5746694E12, 922.54], [1.57467E12, 912.4], [1.5746697E12, 1067.7], [1.5746706E12, 1263.3700000000026], [1.57466934E12, 979.4000000000005], [1.5746703E12, 989.2400000000007], [1.57466964E12, 928.5799999999999], [1.57467024E12, 874.4000000000005], [1.57466994E12, 910.7799999999982], [1.57466928E12, 933.9099999999994]], "isOverall": false, "label": "99th percentile", "isController": false}, {"data": [[1.57466988E12, 711.5], [1.57466958E12, 667.0], [1.57467054E12, 683.8499999999997], [1.57467048E12, 698.0], [1.57467018E12, 726.3], [1.57466952E12, 684.9499999999999], [1.57467012E12, 710.3], [1.57466982E12, 703.0499999999997], [1.57466976E12, 688.55], [1.57466946E12, 672.3], [1.57467042E12, 697.8999999999999], [1.57467036E12, 732.5999999999999], [1.57467006E12, 741.099999999999], [1.5746694E12, 736.3499999999999], [1.57467E12, 744.0], [1.5746697E12, 793.5], [1.5746706E12, 923.4500000000005], [1.57466934E12, 756.3999999999999], [1.5746703E12, 728.1999999999998], [1.57466964E12, 695.8999999999999], [1.57467024E12, 683.1999999999994], [1.57466994E12, 721.0999999999999], [1.57466928E12, 662.0500000000001]], "isOverall": false, "label": "95th percentile", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.5746706E12, "title": "Response Time Percentiles Over Time (successful requests only)"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Response Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentilesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Response time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentilesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimePercentilesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimePercentilesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Time Percentiles Over Time
function refreshResponseTimePercentilesOverTime(fixTimestamps) {
    var infos = responseTimePercentilesOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 28800000);
    }
    if(isGraph($("#flotResponseTimePercentilesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimePercentilesOverTime", "#overviewResponseTimePercentilesOverTime");
        $('#footerResponseTimePercentilesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var responseTimeVsRequestInfos = {
    data: {"result": {"minY": 0.5, "minX": 8.0, "maxY": 649.0, "series": [{"data": [[32.0, 215.5], [33.0, 300.0], [34.0, 190.0], [35.0, 79.0], [36.0, 520.5], [37.0, 89.0], [38.0, 112.0], [40.0, 337.5], [8.0, 395.5], [10.0, 318.0], [12.0, 534.5], [14.0, 541.5], [16.0, 649.0], [18.0, 461.5], [20.0, 527.5], [22.0, 524.0], [23.0, 91.0], [24.0, 350.0], [25.0, 318.0], [26.0, 241.0], [27.0, 112.0], [28.0, 284.0], [29.0, 305.0], [30.0, 522.0], [31.0, 315.0]], "isOverall": false, "label": "Successes", "isController": false}, {"data": [[32.0, 1.0], [33.0, 1.0], [34.0, 1.0], [35.0, 1.0], [36.0, 1.0], [37.0, 1.0], [38.0, 1.0], [40.0, 1.0], [8.0, 0.5], [10.0, 1.0], [12.0, 1.0], [14.0, 1.0], [16.0, 1.0], [18.0, 1.0], [20.0, 1.0], [22.0, 1.0], [23.0, 1.0], [24.0, 1.0], [25.0, 1.0], [26.0, 1.0], [27.0, 1.0], [28.0, 1.0], [29.0, 1.0], [30.0, 1.0], [31.0, 1.0]], "isOverall": false, "label": "Failures", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 40.0, "title": "Response Time Vs Request"}},
    getOptions: function() {
        return {
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Response Time in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: {
                noColumns: 2,
                show: true,
                container: '#legendResponseTimeVsRequest'
            },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median response time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesResponseTimeVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotResponseTimeVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewResponseTimeVsRequest"), dataset, prepareOverviewOptions(options));

    }
};

// Response Time vs Request
function refreshResponseTimeVsRequest() {
    var infos = responseTimeVsRequestInfos;
    prepareSeries(infos.data);
    if (isGraph($("#flotResponseTimeVsRequest"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeVsRequest");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimeVsRequest", "#overviewResponseTimeVsRequest");
        $('#footerResponseRimeVsRequest .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var latenciesVsRequestInfos = {
    data: {"result": {"minY": 0.0, "minX": 8.0, "maxY": 649.0, "series": [{"data": [[32.0, 215.5], [33.0, 300.0], [34.0, 190.0], [35.0, 79.0], [36.0, 520.5], [37.0, 89.0], [38.0, 112.0], [40.0, 337.5], [8.0, 395.5], [10.0, 318.0], [12.0, 534.5], [14.0, 541.5], [16.0, 649.0], [18.0, 461.5], [20.0, 527.5], [22.0, 524.0], [23.0, 91.0], [24.0, 350.0], [25.0, 318.0], [26.0, 241.0], [27.0, 112.0], [28.0, 284.0], [29.0, 305.0], [30.0, 522.0], [31.0, 315.0]], "isOverall": false, "label": "Successes", "isController": false}, {"data": [[32.0, 0.0], [33.0, 0.0], [34.0, 0.0], [35.0, 0.0], [36.0, 0.0], [37.0, 0.0], [38.0, 0.0], [40.0, 0.0], [8.0, 0.0], [10.0, 0.0], [12.0, 0.0], [14.0, 0.0], [16.0, 0.0], [18.0, 0.0], [20.0, 0.0], [22.0, 0.0], [23.0, 0.0], [24.0, 0.0], [25.0, 0.0], [26.0, 0.0], [27.0, 0.0], [28.0, 0.0], [29.0, 0.0], [30.0, 0.0], [31.0, 0.0]], "isOverall": false, "label": "Failures", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 40.0, "title": "Latencies Vs Request"}},
    getOptions: function() {
        return{
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Latency in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: { noColumns: 2,show: true, container: '#legendLatencyVsRequest' },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median Latency time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesLatencyVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotLatenciesVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewLatenciesVsRequest"), dataset, prepareOverviewOptions(options));
    }
};

// Latencies vs Request
function refreshLatenciesVsRequest() {
        var infos = latenciesVsRequestInfos;
        prepareSeries(infos.data);
        if(isGraph($("#flotLatenciesVsRequest"))){
            infos.createGraph();
        }else{
            var choiceContainer = $("#choicesLatencyVsRequest");
            createLegend(choiceContainer, infos);
            infos.createGraph();
            setGraphZoomable("#flotLatenciesVsRequest", "#overviewLatenciesVsRequest");
            $('#footerLatenciesVsRequest .legendColorBox > div').each(function(i){
                $(this).clone().prependTo(choiceContainer.find("li").eq(i));
            });
        }
};

var hitsPerSecondInfos = {
        data: {"result": {"minY": 10.183333333333334, "minX": 1.57466928E12, "maxY": 31.0, "series": [{"data": [[1.57466988E12, 30.3], [1.57466958E12, 30.966666666666665], [1.57467054E12, 30.933333333333334], [1.57467048E12, 30.466666666666665], [1.57467018E12, 30.433333333333334], [1.57466952E12, 30.666666666666668], [1.57467012E12, 30.433333333333334], [1.57466982E12, 30.4], [1.57466976E12, 30.266666666666666], [1.57466946E12, 30.866666666666667], [1.57467042E12, 31.0], [1.57467036E12, 30.2], [1.57467006E12, 29.9], [1.5746694E12, 29.066666666666666], [1.57467E12, 28.633333333333333], [1.5746697E12, 27.15], [1.5746706E12, 10.183333333333334], [1.57466934E12, 30.1], [1.5746703E12, 30.1], [1.57466964E12, 30.65], [1.57467024E12, 30.9], [1.57466994E12, 30.566666666666666], [1.57466928E12, 22.483333333333334]], "isOverall": false, "label": "hitsPerSecond", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.5746706E12, "title": "Hits Per Second"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of hits / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendHitsPerSecond"
                },
                selection: {
                    mode : 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y.2 hits/sec"
                }
            };
        },
        createGraph: function createGraph() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesHitsPerSecond"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotHitsPerSecond"), dataset, options);
            // setup overview
            $.plot($("#overviewHitsPerSecond"), dataset, prepareOverviewOptions(options));
        }
};

// Hits per second
function refreshHitsPerSecond(fixTimestamps) {
    var infos = hitsPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 28800000);
    }
    if (isGraph($("#flotHitsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesHitsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotHitsPerSecond", "#overviewHitsPerSecond");
        $('#footerHitsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var codesPerSecondInfos = {
        data: {"result": {"minY": 5.133333333333334, "minX": 1.57466928E12, "maxY": 15.5, "series": [{"data": [[1.57466988E12, 15.15], [1.57466958E12, 15.483333333333333], [1.57467054E12, 15.466666666666667], [1.57467048E12, 15.233333333333333], [1.57467018E12, 15.216666666666667], [1.57466952E12, 15.333333333333334], [1.57467012E12, 15.216666666666667], [1.57466982E12, 15.2], [1.57466976E12, 15.133333333333333], [1.57466946E12, 15.433333333333334], [1.57467042E12, 15.5], [1.57467036E12, 15.1], [1.57467006E12, 14.95], [1.5746694E12, 14.533333333333333], [1.57467E12, 14.316666666666666], [1.5746697E12, 13.566666666666666], [1.5746706E12, 5.133333333333334], [1.57466934E12, 15.05], [1.5746703E12, 15.05], [1.57466964E12, 15.333333333333334], [1.57467024E12, 15.45], [1.57466994E12, 15.283333333333333], [1.57466928E12, 11.2]], "isOverall": false, "label": "200", "isController": false}, {"data": [[1.57466988E12, 15.15], [1.57466958E12, 15.483333333333333], [1.57467054E12, 15.466666666666667], [1.57467048E12, 15.233333333333333], [1.57467018E12, 15.216666666666667], [1.57466952E12, 15.333333333333334], [1.57467012E12, 15.216666666666667], [1.57466982E12, 15.2], [1.57466976E12, 15.133333333333333], [1.57466946E12, 15.433333333333334], [1.57467042E12, 15.5], [1.57467036E12, 15.1], [1.57467006E12, 14.95], [1.5746694E12, 14.533333333333333], [1.57467E12, 14.316666666666666], [1.5746697E12, 13.583333333333334], [1.5746706E12, 5.133333333333334], [1.57466934E12, 15.05], [1.5746703E12, 15.05], [1.57466964E12, 15.316666666666666], [1.57467024E12, 15.45], [1.57466994E12, 15.283333333333333], [1.57466928E12, 11.2]], "isOverall": false, "label": "Non HTTP response code: org.apache.http.conn.HttpHostConnectException", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.5746706E12, "title": "Codes Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendCodesPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "Number of Response Codes %s at %x was %y.2 responses / sec"
                }
            };
        },
    createGraph: function() {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesCodesPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotCodesPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewCodesPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Codes per second
function refreshCodesPerSecond(fixTimestamps) {
    var infos = codesPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 28800000);
    }
    if(isGraph($("#flotCodesPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesCodesPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotCodesPerSecond", "#overviewCodesPerSecond");
        $('#footerCodesPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var transactionsPerSecondInfos = {
        data: {"result": {"minY": 2.566666666666667, "minX": 1.57466928E12, "maxY": 7.75, "series": [{"data": [[1.57466988E12, 7.55], [1.57466958E12, 7.75], [1.57467054E12, 7.733333333333333], [1.57467048E12, 7.616666666666666], [1.57467018E12, 7.616666666666666], [1.57466952E12, 7.666666666666667], [1.57467012E12, 7.6], [1.57466982E12, 7.6], [1.57466976E12, 7.566666666666666], [1.57466946E12, 7.716666666666667], [1.57467042E12, 7.75], [1.57467036E12, 7.566666666666666], [1.57467006E12, 7.483333333333333], [1.5746694E12, 7.283333333333333], [1.57467E12, 7.15], [1.5746697E12, 6.8], [1.5746706E12, 2.566666666666667], [1.57466934E12, 7.5], [1.5746703E12, 7.516666666666667], [1.57466964E12, 7.65], [1.57467024E12, 7.716666666666667], [1.57466994E12, 7.666666666666667], [1.57466928E12, 5.6]], "isOverall": false, "label": "api\/block\u65B0\u63A5\u53E3-failure", "isController": false}, {"data": [[1.57466988E12, 7.6], [1.57466958E12, 7.733333333333333], [1.57467054E12, 7.733333333333333], [1.57467048E12, 7.616666666666666], [1.57467018E12, 7.6], [1.57466952E12, 7.666666666666667], [1.57467012E12, 7.616666666666666], [1.57466982E12, 7.6], [1.57466976E12, 7.566666666666666], [1.57466946E12, 7.716666666666667], [1.57467042E12, 7.75], [1.57467036E12, 7.533333333333333], [1.57467006E12, 7.466666666666667], [1.5746694E12, 7.25], [1.57467E12, 7.166666666666667], [1.5746697E12, 6.783333333333333], [1.5746706E12, 2.566666666666667], [1.57466934E12, 7.55], [1.5746703E12, 7.533333333333333], [1.57466964E12, 7.666666666666667], [1.57467024E12, 7.733333333333333], [1.57466994E12, 7.616666666666666], [1.57466928E12, 5.6]], "isOverall": false, "label": "api\/block\u8001\u63A5\u53E3\u4E0D\u5E26\u53C2\u6570-success", "isController": false}, {"data": [[1.57466988E12, 7.6], [1.57466958E12, 7.733333333333333], [1.57467054E12, 7.733333333333333], [1.57467048E12, 7.616666666666666], [1.57467018E12, 7.6], [1.57466952E12, 7.666666666666667], [1.57467012E12, 7.616666666666666], [1.57466982E12, 7.6], [1.57466976E12, 7.566666666666666], [1.57466946E12, 7.716666666666667], [1.57467042E12, 7.75], [1.57467036E12, 7.533333333333333], [1.57467006E12, 7.466666666666667], [1.5746694E12, 7.25], [1.57467E12, 7.166666666666667], [1.5746697E12, 6.783333333333333], [1.5746706E12, 2.566666666666667], [1.57466934E12, 7.55], [1.5746703E12, 7.533333333333333], [1.57466964E12, 7.666666666666667], [1.57467024E12, 7.733333333333333], [1.57466994E12, 7.616666666666666], [1.57466928E12, 5.6]], "isOverall": false, "label": "api\/block\u65B0\u63A5\u53E3\u4E0D\u5E26\u53C2\u6570-failure", "isController": false}, {"data": [[1.57466988E12, 7.55], [1.57466958E12, 7.75], [1.57467054E12, 7.733333333333333], [1.57467048E12, 7.616666666666666], [1.57467018E12, 7.616666666666666], [1.57466952E12, 7.666666666666667], [1.57467012E12, 7.6], [1.57466982E12, 7.6], [1.57466976E12, 7.566666666666666], [1.57466946E12, 7.716666666666667], [1.57467042E12, 7.75], [1.57467036E12, 7.566666666666666], [1.57467006E12, 7.483333333333333], [1.5746694E12, 7.283333333333333], [1.57467E12, 7.15], [1.5746697E12, 6.783333333333333], [1.5746706E12, 2.566666666666667], [1.57466934E12, 7.5], [1.5746703E12, 7.516666666666667], [1.57466964E12, 7.666666666666667], [1.57467024E12, 7.716666666666667], [1.57466994E12, 7.666666666666667], [1.57466928E12, 5.6]], "isOverall": false, "label": "api\/block\u8001\u63A5\u53E3-success", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.5746706E12, "title": "Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTransactionsPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                }
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTransactionsPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTransactionsPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewTransactionsPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Transactions per second
function refreshTransactionsPerSecond(fixTimestamps) {
    var infos = transactionsPerSecondInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTransactionsPerSecond");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 28800000);
    }
    if(isGraph($("#flotTransactionsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTransactionsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTransactionsPerSecond", "#overviewTransactionsPerSecond");
        $('#footerTransactionsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var totalTPSInfos = {
        data: {"result": {"minY": 5.133333333333334, "minX": 1.57466928E12, "maxY": 15.5, "series": [{"data": [[1.57466988E12, 15.15], [1.57466958E12, 15.483333333333333], [1.57467054E12, 15.466666666666667], [1.57467048E12, 15.233333333333333], [1.57467018E12, 15.216666666666667], [1.57466952E12, 15.333333333333334], [1.57467012E12, 15.216666666666667], [1.57466982E12, 15.2], [1.57466976E12, 15.133333333333333], [1.57466946E12, 15.433333333333334], [1.57467042E12, 15.5], [1.57467036E12, 15.1], [1.57467006E12, 14.95], [1.5746694E12, 14.533333333333333], [1.57467E12, 14.316666666666666], [1.5746697E12, 13.566666666666666], [1.5746706E12, 5.133333333333334], [1.57466934E12, 15.05], [1.5746703E12, 15.05], [1.57466964E12, 15.333333333333334], [1.57467024E12, 15.45], [1.57466994E12, 15.283333333333333], [1.57466928E12, 11.2]], "isOverall": false, "label": "Transaction-success", "isController": false}, {"data": [[1.57466988E12, 15.15], [1.57466958E12, 15.483333333333333], [1.57467054E12, 15.466666666666667], [1.57467048E12, 15.233333333333333], [1.57467018E12, 15.216666666666667], [1.57466952E12, 15.333333333333334], [1.57467012E12, 15.216666666666667], [1.57466982E12, 15.2], [1.57466976E12, 15.133333333333333], [1.57466946E12, 15.433333333333334], [1.57467042E12, 15.5], [1.57467036E12, 15.1], [1.57467006E12, 14.95], [1.5746694E12, 14.533333333333333], [1.57467E12, 14.316666666666666], [1.5746697E12, 13.583333333333334], [1.5746706E12, 5.133333333333334], [1.57466934E12, 15.05], [1.5746703E12, 15.05], [1.57466964E12, 15.316666666666666], [1.57467024E12, 15.45], [1.57466994E12, 15.283333333333333], [1.57466928E12, 11.2]], "isOverall": false, "label": "Transaction-failure", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.5746706E12, "title": "Total Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTotalTPS"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                },
                colors: ["#9ACD32", "#FF6347"]
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTotalTPS"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTotalTPS"), dataset, options);
        // setup overview
        $.plot($("#overviewTotalTPS"), dataset, prepareOverviewOptions(options));
    }
};

// Total Transactions per second
function refreshTotalTPS(fixTimestamps) {
    var infos = totalTPSInfos;
    // We want to ignore seriesFilter
    prepareSeries(infos.data, false, true);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 28800000);
    }
    if(isGraph($("#flotTotalTPS"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTotalTPS");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTotalTPS", "#overviewTotalTPS");
        $('#footerTotalTPS .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

// Collapse the graph matching the specified DOM element depending the collapsed
// status
function collapse(elem, collapsed){
    if(collapsed){
        $(elem).parent().find(".fa-chevron-up").removeClass("fa-chevron-up").addClass("fa-chevron-down");
    } else {
        $(elem).parent().find(".fa-chevron-down").removeClass("fa-chevron-down").addClass("fa-chevron-up");
        if (elem.id == "bodyBytesThroughputOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshBytesThroughputOverTime(true);
            }
            document.location.href="#bytesThroughputOverTime";
        } else if (elem.id == "bodyLatenciesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesOverTime(true);
            }
            document.location.href="#latenciesOverTime";
        } else if (elem.id == "bodyCustomGraph") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCustomGraph(true);
            }
            document.location.href="#responseCustomGraph";
        } else if (elem.id == "bodyConnectTimeOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshConnectTimeOverTime(true);
            }
            document.location.href="#connectTimeOverTime";
        } else if (elem.id == "bodyResponseTimePercentilesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimePercentilesOverTime(true);
            }
            document.location.href="#responseTimePercentilesOverTime";
        } else if (elem.id == "bodyResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeDistribution();
            }
            document.location.href="#responseTimeDistribution" ;
        } else if (elem.id == "bodySyntheticResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshSyntheticResponseTimeDistribution();
            }
            document.location.href="#syntheticResponseTimeDistribution" ;
        } else if (elem.id == "bodyActiveThreadsOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshActiveThreadsOverTime(true);
            }
            document.location.href="#activeThreadsOverTime";
        } else if (elem.id == "bodyTimeVsThreads") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTimeVsThreads();
            }
            document.location.href="#timeVsThreads" ;
        } else if (elem.id == "bodyCodesPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCodesPerSecond(true);
            }
            document.location.href="#codesPerSecond";
        } else if (elem.id == "bodyTransactionsPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTransactionsPerSecond(true);
            }
            document.location.href="#transactionsPerSecond";
        } else if (elem.id == "bodyTotalTPS") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTotalTPS(true);
            }
            document.location.href="#totalTPS";
        } else if (elem.id == "bodyResponseTimeVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeVsRequest();
            }
            document.location.href="#responseTimeVsRequest";
        } else if (elem.id == "bodyLatenciesVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesVsRequest();
            }
            document.location.href="#latencyVsRequest";
        }
    }
}

/*
 * Activates or deactivates all series of the specified graph (represented by id parameter)
 * depending on checked argument.
 */
function toggleAll(id, checked){
    var placeholder = document.getElementById(id);

    var cases = $(placeholder).find(':checkbox');
    cases.prop('checked', checked);
    $(cases).parent().children().children().toggleClass("legend-disabled", !checked);

    var choiceContainer;
    if ( id == "choicesBytesThroughputOverTime"){
        choiceContainer = $("#choicesBytesThroughputOverTime");
        refreshBytesThroughputOverTime(false);
    } else if(id == "choicesResponseTimesOverTime"){
        choiceContainer = $("#choicesResponseTimesOverTime");
        refreshResponseTimeOverTime(false);
    }else if(id == "choicesResponseCustomGraph"){
        choiceContainer = $("#choicesResponseCustomGraph");
        refreshCustomGraph(false);
    } else if ( id == "choicesLatenciesOverTime"){
        choiceContainer = $("#choicesLatenciesOverTime");
        refreshLatenciesOverTime(false);
    } else if ( id == "choicesConnectTimeOverTime"){
        choiceContainer = $("#choicesConnectTimeOverTime");
        refreshConnectTimeOverTime(false);
    } else if ( id == "choicesResponseTimePercentilesOverTime"){
        choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        refreshResponseTimePercentilesOverTime(false);
    } else if ( id == "choicesResponseTimePercentiles"){
        choiceContainer = $("#choicesResponseTimePercentiles");
        refreshResponseTimePercentiles();
    } else if(id == "choicesActiveThreadsOverTime"){
        choiceContainer = $("#choicesActiveThreadsOverTime");
        refreshActiveThreadsOverTime(false);
    } else if ( id == "choicesTimeVsThreads"){
        choiceContainer = $("#choicesTimeVsThreads");
        refreshTimeVsThreads();
    } else if ( id == "choicesSyntheticResponseTimeDistribution"){
        choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        refreshSyntheticResponseTimeDistribution();
    } else if ( id == "choicesResponseTimeDistribution"){
        choiceContainer = $("#choicesResponseTimeDistribution");
        refreshResponseTimeDistribution();
    } else if ( id == "choicesHitsPerSecond"){
        choiceContainer = $("#choicesHitsPerSecond");
        refreshHitsPerSecond(false);
    } else if(id == "choicesCodesPerSecond"){
        choiceContainer = $("#choicesCodesPerSecond");
        refreshCodesPerSecond(false);
    } else if ( id == "choicesTransactionsPerSecond"){
        choiceContainer = $("#choicesTransactionsPerSecond");
        refreshTransactionsPerSecond(false);
    } else if ( id == "choicesTotalTPS"){
        choiceContainer = $("#choicesTotalTPS");
        refreshTotalTPS(false);
    } else if ( id == "choicesResponseTimeVsRequest"){
        choiceContainer = $("#choicesResponseTimeVsRequest");
        refreshResponseTimeVsRequest();
    } else if ( id == "choicesLatencyVsRequest"){
        choiceContainer = $("#choicesLatencyVsRequest");
        refreshLatenciesVsRequest();
    }
    var color = checked ? "black" : "#818181";
    if(choiceContainer != null) {
        choiceContainer.find("label").each(function(){
            this.style.color = color;
        });
    }
}

